{"version":3,"sources":["store/module/tagViews.ts","store/module/paramsComponent.ts","store/store.ts","app-info.js","contexts/navigation.js","api/ApiConstants.ts","pages/bacsigd/bacsigiadinh.js","components/info-search/index.tsx","pages/tasks/tasks.tsx","pages/home/home.tsx","pages/profile/profile.js","assets/grid/datagrid.tsx","assets/popup/index.tsx","pages/benhan/index.tsx","pages/canlamsang/xetnghiem/xetnghiem_labo.tsx","pages/contract/richtext-editor.js","utils/api.js","constant.js","callApi.js","pages/contract/contract.js","pages/template-contract/Context.js","pages/new-staff/new-staff.js","api/methods/index.ts","api/methods/auth.js","api/methods/thoigianlichhenkhamngay.js","api/methods/thoigianlichhenkhamgio.js","contexts/thoigianlichkhamngay.context.js","pages/thoigianlichhenkhamngay/searchBox.js","pages/thoigianlichhenkhamngay/thoigianlichhenkhamgio.js","pages/thoigianlichhenkhamngay/thoigianlichhenkhamgioHOC.js","pages/thoigianlichhenkhamngay/thoigianlichhenkhamngay.js","pages/thoigianlichhenkhamngay/thoigianlichhenkhamngayHOC.js","pages/thoigianlichhenkhamngay/index.js","pages/dmvt/dmvt2.js","pages/nhomvattu/nhomvattu.js","pages/template-contract/Button.js","pages/template-contract/richtext-editor.js","pages/template-contract/data/docs.js","pages/template-contract/data/options.js","pages/template-contract/template-contract.js","app-routes.js","contexts/auth.js","components/user-panel/user-panel.js","components/header/header.js","components/footer/footer.js","components/login-form/login-form.js","components/reset-password-form/reset-password-form.js","components/create-account-form/create-account-form.js","components/change-password-form/change-password-form.js","app-navigation.js","utils/media-query.js","components/side-navigation-menu/side-navigation-menu.js","utils/patches.js","layouts/side-nav-outer-toolbar/side-nav-outer-toolbar.js","components/headertwo/header.js","layouts/side-nav-inner-toolbar/side-nav-inner-toolbar.js","layouts/single-card/single-card.js","Content.js","UnauthenticatedContent.js","App.js","reportWebVitals.js","index.js"],"names":["counterSlice","createSlice","name","initialState","text","icon","path","reducers","addMenuRouter","state","actions","payload","meta","hasOwnProperty","removeMenuRouter","removeAllMenuRouter","onTabDrop","newObject","map","index","key","reducer","addParamsToState","console","log","combineReducers","tagViews","paramsComponent","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","appInfo","title","NavigationContext","createContext","useNavigation","useContext","NavigationProvider","props","useState","navigationData","setNavigationData","Provider","value","ApiConstants","BASE_URL","LOGIN","MODULE_NAME","THOI_GIAN_LICH_HEN_KHAM_NGAY_URL","GET_ALL_THOI_GIAN_LICH_HEN_KHAM_NGAY","THOI_GIAN_LICH_HEN_KHAM_GIO_URL","GET_ALL_THOI_GIAN_LICH_HEN_KHAM_GIO","THOI_GIAN_CHO_PHEP_DAT_LICH_KHAM","bacsigiadinh","ordersData","CustomStore","load","sendRequest","update","values","encodeURIComponent","url","method","data","fetch","credentials","then","result","json","ok","item","datlichtruoctoida","Message","headers","body","JSON","stringify","response","Fragment","dataSource","showBorders","hoverStateEnabled","allowColumnReordering","rowAlternationEnabled","repaintChangesOnly","mode","allowUpdating","showTitle","width","height","dataField","caption","dataType","visible","InfoSearch","Date","className","style","fontWeight","type","expand","select","Task","dispatch","useDispatch","history","useHistory","current","useRef","column","propertyHeight","onCellDblClick","newObjectRoute","push","pathname","Home","gridColumns","App","ID","CompanyName","Address","City","State","Zipcode","Phone","Fax","Website","gridDataSource","gridBoxValue","setGridBoxValue","isGridBoxOpened","setIsGridBoxOpened","dataGrid_onSelectionChanged","e","selectedRowKeys","currentDeselectedRowKeys","opened","valueExpr","deferRendering","displayExpr","placeholder","showClearButton","onValueChanged","onOptionChanged","contentRender","columns","onSelectionChanged","enabled","pageSize","DataGridCustom","propertySelection","filterRow","PopupCustom","component","addButtonOptions","onClick","hideInfo","removeButtonOptions","editButtonOptions","id","at","my","widget","toolbar","location","options","GridTop","useLocation","GridBody","isChecked","setIsChecked","isProperties","dragEnabled","closeOnOutsideClick","showCloseButton","container","onVisibleChange","BenhAnComponent","XenghiemLabo","RichTextContract","RichEditComponent","rich","RichEdit","createOptions","bookmarks","visibility","color","confirmOnLosingChanges","message","fields","updateFieldsBeforePrint","updateFieldsOnPaste","mailMerge","activeRecord","viewMergedData","Name","age","events","activeSubDocumentChanged","autoCorrect","calculateDocumentVariable","characterPropertiesChanged","contentInserted","contentRemoved","documentChanged","documentFormatted","documentLoaded","gotFocus","hyperlinkClick","keyDown","keyUp","paragraphPropertiesChanged","lostFocus","pointerDown","pointerUp","saving","saved","selectionChanged","customCommandExecuted","s","commandName","document","insertParagraph","length","insertText","unit","RichEditUnit","Inch","view","viewType","ViewType","PrintLayout","simpleViewSettings","paddings","left","top","right","bottom","exportUrl","readOnly","this","create","getElementById","openDocument","DocumentFormat","Rtf","React","Component","callApi","enpoint","axios","catch","err","getApi","param","Contract","useParams","useEffect","ThemContext","handleErrors","Error","statusText","loadOptions","params","forEach","i","undefined","slice","count","total","pageCount","onInserting","insert","phongban","parse","localStorage","getItem","NewStaff","autoExpandAll","focusedRowKey","setFocusRowKey","focusedRowIndex","setFocusRowIndex","autoNavigateToFocusedRow","dataGrid","instance","expandAll","collapseAll","editRow","getSelectedRowsData","onContentReady","columnOption","columnWidth","focusedRowEnabled","onFocusedRowChanged","option","keyExpr","ref","allowAdding","allowDeleting","groupIndex","cellRender","cellRenderGioiTinh","cellRenderHopDong","cellRenderBangCap","cellRenderCheckBox","rowRenderingMode","columnRenderingMode","summaryType","displayFormat","loaibangcap","tenloaibangcap","loaihopdong","tenloaihopdong","iconSize","api","a","token","sessionStorage","Accept","Authorization","resp","error","signIn","userName","password","Api","username","dataUser","user","isOk","getUser","createAccount","email","changePassword","recoveryCode","resetPassword","getModule","CRUDThoigianlichhenkhamngay","CRUDThoigianlichhenkhamgio","ThoigianlichkhamngayProvider","setId","moduleId","setModuleId","module","setModule","startDate","dayjs","startOf","endDate","endOf","searchDate","selectedRowIndex","setSelectedRowIndex","getData","setIdLichkhamngay","useCallback","ThoigianlichkhamngayContext","useThoigianlichkhamngay","buttonOptions","useSubmitBehavior","SearchBox","dateTime","colCount","formData","colspan","editorType","format","useMaskBehavior","ThoiGianLichHenGio","memo","remove","marginLeft","itemType","colSpan","alignment","gnment","editorOptions","comparisonTarget","gridInstant","editRowkey","getRowIndexByKey","cellValue","comparisonType","ThoigianlichhenkhamgioHOC","formatSearchDate","Thoigianlichhenkhamngay","dateSerializationFormat","onFocusedRowChanging","rowsCount","getVisibleRows","pageIndex","event","prevRowIndex","newRowIndex","done","row","allowColumnResizing","useNative","fixed","ThoigianlichhenkhamngayHOC","ThoiGianLichHenKhamNgayWrap","ratio","screen","col","URL","Dmvt2","boxData","setBoxData","get","filter","is_bhcc","wordWrapEnabled","Nhomvattu","defaultPageSize","btnStyle","padding","backgroundColor","border","borderRadius","ApplyButton","click","renderCount","noidungsua","setnoidungsua","hopdong","setName","employees","setEmployees","dataEmployee","DataSource","ArrayStore","richEditEl","updateRibbon","r","getTab","RibbonTabType","MailMerge","enumMember","removeItem","MailMergeTabItemId","UpdateAllFields","parseInt","saveDocument","mailMergeOptions","setDataSource","noidung","newDocument","addHandler","base64","handled","dataChanged","updatedBy","updatedAt","toISOString","Grid","toString","TemplateContract","sethopdong","useMemo","loaitemplate","createdBy","createdAt","selectedRowsData","routes","children","TasksPage","ProfilePage","NewStaffPage","ContractPage","TemplateContractPage","HomePage","route","match","currentPath","createElement","AuthProvider","setUser","loading","setLoading","sendSignInRequest","setItem","accessToken","signOut","AuthContext","useAuth","UserPanel","menuMode","navigateToProfile","menuItems","background","avatarUrl","backgroundSize","holotNhanVien","tennhanvien","items","target","showEvent","cssClass","Header","menuToggleEnabled","toggleMenu","stylingMode","locateInMenu","menuItemTemplate","Footer","rest","LoginForm","onSubmit","preventDefault","notify","disabled","emailEditorOptions","passwordEditorOptions","ResetPasswordForm","elementAttr","submitButtonAttributes","to","class","CreateAccountForm","confirmPassword","confirmedPasswordEditorOptions","validationCallback","ChangePasswordForm","navigation","useScreenSize","getScreenSize","screenSize","setScreenSize","onSizeChanged","subscribe","unsubscribe","handlers","xSmallMedia","window","matchMedia","smallMedia","mediumMedia","largeMedia","media","addListener","matches","handler","isXSmall","isSmall","isMedium","isLarge","SideNavigationMenu","selectedItemChanged","openMenu","compactMode","onMenuReady","test","expanded","treeViewRef","wrapperRef","getWrapperRef","element","prevElement","treeView","selectItem","expandItem","searchEnabled","searchMode","selectionMode","focusStateEnabled","expandEvent","onItemClick","useMenuPatch","setEnabled","setTimeout","HeaderTwo","isArrayHtml","list","useSelector","selectedItem","setSelectedItem","Object","entries","closeButtonHandler","indexOf","getPositionIndex","closeHandler","renderTitle","args","addedItems","onTabDragStart","itemData","fromData","fromIndex","splice","toIndex","dis","getState","itemOrientation","dragDirection","onDragStart","onReorder","itemTitleRender","showNavButtons","itemComponent","SideNavInnerToolbar","scrollViewRef","patchCssClass","MenuStatus","Opened","Closed","menuStatus","setMenuStatus","prevMenuStatus","stopPropagation","temporaryOpenMenu","TemporaryOpened","onOutsideClick","onNavigationChanged","node","selected","action","join","position","openedStateMode","revealMode","minSize","maxSize","shading","template","Children","SingleCard","description","Content","exact","UnauthenticatedContent","locale","loadMessages","viMessages","defaultOptions","Root","screenSizeClass","useScreenSizeClass","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.147c5346.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface Foo {\r\n  [key: string]: Object;\r\n}\r\n\r\nconst initialState : Foo =  {'Home':[{'meta' : { text: 'Home', icon: 'home', path: '/home' }}]};\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    addMenuRouter(state,actions) {\r\n      \r\n      const {text}  = actions?.payload[0]?.meta;\r\n      if(!state.hasOwnProperty(text)){\r\n        state[text] = actions?.payload;\r\n      }\r\n      return state;\r\n    },\r\n    removeMenuRouter(state,actions) {\r\n      const {text}  = actions?.payload;\r\n      if(state.hasOwnProperty(text)){\r\n        delete state[text];\r\n      };\r\n      return state;\r\n    },\r\n    removeAllMenuRouter(state,actions) {\r\n      const {text}  = actions?.payload;\r\n      if(state.hasOwnProperty(text)){\r\n        delete state[text];\r\n      };\r\n      return state;\r\n    },\r\n    onTabDrop(state,actions) {\r\n      const newObject:any = {};\r\n        actions?.payload.map((index:any,key:any) => {\r\n          newObject[index.text] = [{meta:index}];\r\n        })\r\n       state = newObject;\r\n       return state;\r\n    },\r\n  },\r\n})\r\n\r\n// Extract the action creators object and the reducer\r\nconst { actions, reducer } = counterSlice\r\n// Extract and export each action creator by name\r\nexport const { addMenuRouter, removeMenuRouter,removeAllMenuRouter,onTabDrop} = actions\r\n// Export the reducer, either as a default or named export\r\nexport default reducer","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IParamCompnent {\r\n    [key: string]: Object;\r\n}\r\n\r\nconst initialState:IParamCompnent = {};\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'IParams',\r\n    initialState,\r\n    reducers: {\r\n        addParamsToState(state : any, actions : any) {\r\n            console.log(actions.payload);\r\n        },\r\n    },\r\n})\r\n\r\n// Extract the action creators object and the reducer\r\nconst { actions, reducer } = counterSlice\r\n// Extract and export each action creator by name\r\nexport const { addParamsToState } = actions\r\n// Export the reducer, either as a default or named export\r\nexport default reducer\r\n\r\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport tagViews from 'store/module/tagViews';\r\nimport paramsComponent from 'store/module/paramsComponent';\r\n\r\n// // https://webpack.js.org/guides/dependency-management/#requirecontext\r\n// const modulesFiles = require.context('./module', true, /\\.js$/)\r\n// // you do not need `import app from './modules/app'`\r\n// // it will auto require all vuex module from modules file\r\n// const modules = modulesFiles.keys().reduce((modules, modulePath) => {\r\n//   // set './app.js' => 'app'\r\n//   const moduleName = modulePath.replace(/^\\.\\/(.*)\\.\\w+$/, '$1')\r\n//   const value = modulesFiles(modulePath)\r\n//   modules[moduleName] = value.default\r\n//   return modules\r\n// }, {})\r\n\r\n\r\n// const reducer = {\r\n//     decrement: decrement,\r\n//     increment: increment,\r\n//   }\r\n\r\n\r\nconst reducer = combineReducers({\r\n        tagViews: tagViews,\r\n        paramsComponent: paramsComponent,\r\n        \r\n})\r\n\r\nconst store = configureStore(\r\n    {\r\n        reducer,\r\n        // screenreducer,\r\n        middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n            serializableCheck: false\r\n        }),\r\n    })\r\nexport default store\r\n\r\n\r\n// import { combineReducers } from 'redux'\r\n\r\n// import postsReducer from './posts'\r\n// import     from './post'\r\n// import commentsReducer from './comments'\r\n\r\n\r\n\r\n// export default rootReducer","const appInfo = {\r\n    title: 'Ehealth'\r\n};\r\nexport default appInfo;\r\n\r\n","import React, { useState, createContext, useContext, useEffect } from 'react';\r\n\r\nconst NavigationContext = createContext({});\r\nconst useNavigation = () => useContext(NavigationContext);\r\n\r\nfunction NavigationProvider(props) {\r\n  const [navigationData, setNavigationData] = useState({});\r\n\r\n  return (\r\n    <NavigationContext.Provider\r\n      value={{ navigationData, setNavigationData }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction withNavigationWatcher(Component) {\r\n  return function (props) {\r\n    const { path } = props.match;\r\n    const { setNavigationData } = useNavigation();\r\n\r\n    useEffect(() => {\r\n      setNavigationData({ currentPath: path });\r\n    }, [path, setNavigationData]);\r\n\r\n    return React.createElement(Component, props);\r\n  }\r\n}\r\n\r\nexport {\r\n  NavigationProvider,\r\n  useNavigation,\r\n  withNavigationWatcher\r\n}\r\n","const ApiConstants = {\r\n  BASE_URL: 'http://192.168.1.107:9000/',\r\n  // BASE_URL: 'http://localhost:7000/',\r\n  LOGIN: 'auth/login',\r\n  MODULE_NAME: 'thoigianlichhenkhamngay/module',\r\n  THOI_GIAN_LICH_HEN_KHAM_NGAY_URL: 'thoigianlichhenkhamngay',\r\n  GET_ALL_THOI_GIAN_LICH_HEN_KHAM_NGAY: 'thoigianlichhenkhamngay?join=userCreatedBy||nickname&join=userUpdatedBy||nickname',\r\n  THOI_GIAN_LICH_HEN_KHAM_GIO_URL: 'thoigianlichhenkhamgio',\r\n  GET_ALL_THOI_GIAN_LICH_HEN_KHAM_GIO: 'thoigianlichhenkhamgio?join=userCreatedBy||nickname&join=userUpdatedBy||nickname&filter=thoigianlichhenkham_id||$eq||',\r\n  THOI_GIAN_CHO_PHEP_DAT_LICH_KHAM: \"thoigiandatlich\",\r\n}\r\n\r\nexport default ApiConstants\r\n","import \"./styles.css\";\r\nimport { DataGrid, Popup } from \"devextreme-react\";\r\n import { Column, Editing, FilterRow, Form } from \"devextreme-react/data-grid\";\r\nimport { Item } from \"devextreme-react/form\";\r\nimport React, { useReducer } from \"react\";\r\nimport CustomStore from \"devextreme/data/custom_store\";\r\nimport ApiConstants from \"api/ApiConstants\";\r\n\r\n// const initialState = {\r\n//   focusedRowIndex: 0,\r\n//   focusedRowKey: null,\r\n// };\r\n\r\n// const reducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case \"focusedRowKey\":\r\n//       return {\r\n//         ...state,\r\n//         focusedRowIndex: action.focusedRowIndex,\r\n//         focusedRowKey: action.focusedRowKey,\r\n//       };\r\n//     default:\r\n//       break;\r\n//   }\r\n// };\r\nexport const bacsigiadinh = () => {\r\n  // console.log(111111111111111);\r\n  // const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const ordersData = new CustomStore({\r\n    key: \"id\",\r\n    load: () => sendRequest(`${ApiConstants.BASE_URL}${ApiConstants.THOI_GIAN_CHO_PHEP_DAT_LICH_KHAM}`),\r\n\r\n    update: (key, values) =>\r\n      sendRequest(`${ApiConstants.BASE_URL}${ApiConstants.THOI_GIAN_CHO_PHEP_DAT_LICH_KHAM}/${encodeURIComponent(key)}`, \"PATCH\", {\r\n        key,\r\n        values: values,\r\n      }),\r\n  });\r\n  const sendRequest = (url, method = \"GET\", data = {}) => {\r\n    if (method === \"GET\") {\r\n      return fetch(url, {\r\n        method,\r\n        credentials: \"include\",\r\n      }).then((result) =>\r\n        result.json().then((json) => {\r\n          if (result.ok) {\r\n            const newArr = json.map(item => {\r\n              return {...item, datlichtruoctoida: item.datlichtruoctoida / 1440}\r\n            })\r\n            return newArr;\r\n          }\r\n\r\n          throw json.Message;\r\n        })\r\n      );\r\n    }\r\n\r\n    if (data) {\r\n      if (data.values.datlichtruoctoida) {\r\n        data.values.datlichtruoctoida = data.values.datlichtruoctoida * 1440;\r\n      }\r\n      return fetch(url, {\r\n        method: method,\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(data.values),\r\n      }).then((response) => {\r\n        return response.json();\r\n      });\r\n    }\r\n  };\r\n  // const onFocusedRowChanged = (e) => {\r\n  //   console.log(e.row.data);\r\n  //   dispatch({\r\n  //     // index: 0\r\n  //     focusedRowIndex: e.rowIndex,\r\n  //     // key: 1\r\n  //     focusedRowKey: e.component.getKeyByRowIndex(e.rowIndex),\r\n  //     type: \"focusedRowKey\",\r\n  //   });\r\n  // };\r\n  \r\n  return (\r\n    <>\r\n      <React.Fragment>\r\n        <DataGrid\r\n          dataSource={ordersData}\r\n          showBorders={true}\r\n          hoverStateEnabled={true}\r\n          allowColumnReordering={true}\r\n          rowAlternationEnabled={true}\r\n          repaintChangesOnly={true}\r\n          // focusedRowEnabled={true}\r\n          // onFocusedRowChanged={onFocusedRowChanged}\r\n          // focusedRowIndex={focusedRowIndex}\r\n          // focusedRowKey={focusedRowKey}\r\n        >\r\n          <Editing mode=\"popup\" allowUpdating={true}>\r\n            <Popup\r\n              title=\"Employee Info\"\r\n              showTitle={true}\r\n              width={700}\r\n              height={525}\r\n            />\r\n            <Form>\r\n              <Item dataField=\"datlichtruoctoida\" />\r\n              <Item dataField=\"datlichtruoctoithieu\" />\r\n            </Form>\r\n          </Editing>\r\n          <Column\r\n            dataField=\"id\"\r\n            caption=\"ROW\"\r\n            width={50}\r\n            // allowSorting={false}\r\n          />\r\n          <Column dataField=\"module_name\" caption=\"MODULE\" width={240} />\r\n          <Column\r\n            dataField=\"datlichtruoctoida\"\r\n            caption=\"TG cho phép đặt lịch trước tối đa\"\r\n            dataType=\"string\"\r\n          />\r\n          <Column\r\n            dataField=\"datlichtruoctoithieu\"\r\n            caption=\"TG cho phép đặt lịch trước tối thiểu\"\r\n            dataType=\"string\"\r\n          />\r\n          <Column dataField=\"created_at\" caption=\"Ngày tạo\" dataType=\"date\" />\r\n          <Column dataField=\"create_by\" caption=\"Người tạo\" dataType=\"string\"/>\r\n          <Column dataField=\"updated_at\" caption=\"Ngày sửa\" dataType=\"date\" />\r\n          <Column dataField=\"update_by\" caption=\"Người sửa\" dataType=\"string\"/>\r\n          <FilterRow visible={true} />\r\n        </DataGrid>\r\n      </React.Fragment>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport 'devextreme-react/text-area';\r\nimport Form, { SimpleItem, GroupItem, TabbedItem, TabPanelOptions, Tab, ButtonItem, Item } from 'devextreme-react/form';\r\nimport {myImages} from 'assets/index';\r\nimport './style.css';\r\n\r\nconst employee = {\r\n    'ID': 1,\r\n    'FirstName': 'John',\r\n    'LastName': 'Heart',\r\n    'CompanyName': 'Super Mart of the West',\r\n    'Position': 'CEO',\r\n    'OfficeNo': '901',\r\n    'BirthDate': new Date(1964, 2, 16),\r\n    'HireDate': new Date(1995, 0, 15),\r\n    'Address': '351 S Hill St.',\r\n    'City': 'Los Angeles',\r\n    'State': 'CA',\r\n    'Zipcode': '90013',\r\n    'Phone': '+1(213) 555-9392',\r\n    'Email': 'jheart@dx-email.com',\r\n    'Skype': 'jheart_DX_skype'\r\n};\r\nconst positions = [\r\n    'HR Manager',\r\n    'IT Manager',\r\n    'CEO',\r\n    'Controller',\r\n    'Sales Manager',\r\n    'Support Manager',\r\n    'Shipping Manager'\r\n];\r\n\r\nconst InfoSearch = () => {\r\n\r\n    const positionEditorOptions = { items: positions, searchEnabled: true, value: '' }\r\n    const hireDateEditorOptions = { width: '100%', value: null };\r\n    const validationRules = {\r\n        position: [\r\n            { type: 'required', message: 'Position is required.' },\r\n        ],\r\n        hireDate: [\r\n            { type: 'required', message: 'Hire Date is required.' }\r\n        ]\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"form-container\">\r\n                <div className=\"left-side\">\r\n                    <div className=\"logo\">\r\n                        <span style={{ fontWeight: \"bold\" }}>Danh sách bệnh nhân</span>\r\n                    </div>\r\n                </div>\r\n                {/* <Form\r\n                    colCount={6}\r\n                    id=\"form\"\r\n                    formData={employee}\r\n                    labelLocation={'left'}\r\n                    readOnly={false}\r\n                    showColonAfterLabel={true}\r\n                    showValidationSummary={true}\r\n                //validationGroup=\"customerData\"\r\n                >\r\n                    <GroupItem caption=\"\">\r\n                        <div style={{ border: \"1px solid green\", height: \"93px\", textAlign: \"center\" }}>\r\n                            <img className=\"employeePhoto\" src={myImages.imagesInfo} height=\"90px\" />\r\n                        </div>\r\n                    </GroupItem>\r\n                    <GroupItem >\r\n                        <SimpleItem dataField=\"Họ Lót\" />\r\n                        <SimpleItem dataField=\"Mã BN\" />\r\n                        <SimpleItem dataField=\"Dị Ứng\" />\r\n                    </GroupItem>\r\n                    <GroupItem>\r\n                        <SimpleItem dataField=\"Tên\" />\r\n                        <SimpleItem dataField=\"Sample ID\" />\r\n                        <Item dataField=\"Loại Khám\" editorType=\"dxSelectBox\"\r\n                            editorOptions={positionEditorOptions}\r\n                        // validationRules={this.validationRules.position} \r\n                        />\r\n                    </GroupItem>\r\n                    <GroupItem>\r\n                        <SimpleItem dataField=\"Địa Chỉ\" />\r\n                        <SimpleItem dataField=\"Số BHYT\" />\r\n                        <Item dataField=\"Nghề Nghiệp\" editorType=\"dxSelectBox\"\r\n                            editorOptions={positionEditorOptions}\r\n                        // validationRules={this.validationRules.position} \r\n                        />\r\n                    </GroupItem>\r\n                    <GroupItem>\r\n                        <SimpleItem dataField=\"Điện Thoại\" />\r\n                        <SimpleItem dataField=\"Ghi Chú\" />\r\n                        <Item dataField=\"Chẩn Đoán\" editorType=\"dxSelectBox\"\r\n                            editorOptions={positionEditorOptions}\r\n                        // validationRules={this.validationRules.position} \r\n                        />\r\n                    </GroupItem>\r\n                    <GroupItem >\r\n                        <Item dataField=\"Năm Sinh\" editorType=\"dxDateBox\"\r\n                            editorOptions={hireDateEditorOptions}\r\n                            validationRules={validationRules.hireDate}\r\n                        />\r\n                        <SimpleItem dataField=\"Giới Tính\" />\r\n                        <Item dataField=\"Công Ty\" editorType=\"dxSelectBox\"\r\n                            editorOptions={positionEditorOptions}\r\n                        // validationRules={this.validationRules.position} \r\n                        />\r\n                    </GroupItem>\r\n               \r\n                </Form> */}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default InfoSearch;\r\n","import useWindowDimensions from 'assets/features/getScreen';\r\nimport Button from 'devextreme-react/button';\r\nimport {\r\n  Column, Lookup, Pager,\r\n  Paging, Scrolling\r\n} from 'devextreme-react/data-grid';\r\nimport 'devextreme/data/odata/store';\r\nimport React, { useRef } from 'react';\r\nimport KeepAlive from 'react-activation';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { addParamsToState } from 'store/module/paramsComponent';\r\nimport { addMenuRouter } from 'store/module/tagViews';\r\nimport { DataGrid } from 'pages/index';\r\nexport interface IObject {\r\n  [key: string]: Object;\r\n}\r\nconst dataSource = {\r\n  store: {\r\n      type: 'odata',\r\n      key: 'Task_ID',\r\n      url: 'https://js.devexpress.com/Demos/DevAV/odata/Tasks'\r\n  },\r\n  expand: 'ResponsibleEmployee',\r\n  select: [\r\n      'Task_ID',\r\n      'Task_Subject',\r\n      'Task_Start_Date',\r\n      'Task_Due_Date',\r\n      'Task_Status',\r\n      'Task_Priority',\r\n      'Task_Completion',\r\n      'ResponsibleEmployee/Employee_Full_Name'\r\n  ]\r\n};\r\n\r\nexport default function Task() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const stageCanvasRef: any = useRef();\r\n  const { current } = stageCanvasRef;\r\n  const isHeight = current?.props?.height;\r\n  // const \r\n  // console.log(isHeight);\r\n  //đoạn ni xử lý cái lưới ở dưới theo \r\n  const handleOnDbClickCell = (item: any): void => {\r\n    // console.log(item);\r\n    const index: string = 'benhan_' + item?.key;\r\n    const newObject: IObject = {};\r\n    const newObjectRoute: IObject = {};\r\n    newObjectRoute['meta'] = { icon: 'tab', text: 'BenhAn' + item?.key, path: '/benhan/' + item?.key };\r\n    newObject[index] = item.values;\r\n    dispatch(addParamsToState(newObject));\r\n    dispatch(addMenuRouter([newObjectRoute]))\r\n    history.push({\r\n      pathname: '/benhan/' + item?.key,\r\n      state:item.values\r\n  });\r\n  }\r\n\r\n  return (\r\n    <KeepAlive>\r\n      <React.Fragment>\r\n        <div className=\"left-side\">\r\n          <div className=\"logo\">\r\n            <span style={{ fontWeight: \"bold\" }}>Danh sách bệnh nhân</span>\r\n            &nbsp;\r\n            <Button\r\n              type=\"success\"\r\n              text=\"Reset vân tay\"\r\n              width={\"auto\"}\r\n            // onClick={this.doneClick} \r\n            />\r\n          </div>\r\n        </div>\r\n          <DataGrid column={[{ caption: 'Mã BN', width: 100 }, { caption: 'Họ lót'}, { caption: 'Tên'}, { caption: 'Ngày sinh', width: 200 }, { caption: 'Năm sinh', width: 100 }, { caption: 'Giới tính', width: 100 }, { caption: 'Điện thoại 1', width: 100 }, { caption: 'Điện thoại 2', width: 100 }, { caption: 'Địa chỉ', width: 200 }, { caption: 'Người liên hệ', width: 150 }, { caption: 'Quan hệ với BN', width: 100 }, { caption: 'ĐT người LH', width: 100 }, { caption: 'DT người LH', width: 100 }, { caption: 'Ghi chú', width: 100 }, { caption: 'Sổ BHYT', width: 100 }]} propertyHeight={\"400\"} onCellDblClick={handleOnDbClickCell} dataSource={dataSource}  />\r\n      </React.Fragment>\r\n    </KeepAlive>\r\n  )\r\n}\r\n\r\n","import InfoSearch from 'components/info-search';\r\nimport 'devextreme-react/text-area';\r\nimport Tasks from 'pages/tasks/tasks';\r\nimport React from 'react';\r\nimport './home.scss'\r\nimport KeepAlive from 'react-activation';\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <KeepAlive>\r\n      <React.Fragment>\r\n        <div className=\"form-container\">\r\n          <InfoSearch />\r\n          \r\n          <Tasks />\r\n        </div>\r\n      </React.Fragment>\r\n    </KeepAlive>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import DataGrid, {\r\n  FilterRow,\r\n  Paging,\r\n  Scrolling,\r\n  Selection,\r\n} from \"devextreme-react/data-grid\";\r\nimport DropDownBox from \"devextreme-react/drop-down-box\";\r\nimport React, { useState } from \"react\";\r\nimport KeepAlive from \"react-activation\";\r\nimport \"whatwg-fetch\";\r\nconst gridColumns = [\"CompanyName\", \"City\", \"Phone\"];\r\n\r\nconst App = () => {\r\n  const [gridDataSource, setGridDataSource] = useState([\r\n    {\r\n      ID: 1,\r\n      CompanyName: \"Premier Buy\",\r\n      Address: \"7601 Penn Avenue South\",\r\n      City: \"Richfield\",\r\n      State: \"Minnesota\",\r\n      Zipcode: 55423,\r\n      Phone: \"(612) 291-1000\",\r\n      Fax: \"(612) 291-2001\",\r\n      Website: \"http://www.nowebsitepremierbuy.com\",\r\n    },\r\n    {\r\n      ID: 2,\r\n      CompanyName: \"ElectrixMax\",\r\n      Address: \"263 Shuman Blvd\",\r\n      City: \"Naperville\",\r\n      State: \"Illinois\",\r\n      Zipcode: 60563,\r\n      Phone: \"(630) 438-7800\",\r\n      Fax: \"(630) 438-7801\",\r\n      Website: \"http://www.nowebsiteelectrixmax.com\",\r\n    },\r\n    {\r\n      ID: 3,\r\n      CompanyName: \"Video Emporium\",\r\n      Address: \"1201 Elm Street\",\r\n      City: \"Dallas\",\r\n      State: \"Texas\",\r\n      Zipcode: 75270,\r\n      Phone: \"(214) 854-3000\",\r\n      Fax: \"(214) 854-3001\",\r\n      Website: \"http://www.nowebsitevideoemporium.com\",\r\n    },\r\n    {\r\n      ID: 4,\r\n      CompanyName: \"Screen Shop\",\r\n      Address: \"1000 Lowes Blvd\",\r\n      City: \"Mooresville\",\r\n      State: \"North Carolina\",\r\n      Zipcode: 28117,\r\n      Phone: \"(800) 445-6937\",\r\n      Fax: \"(800) 445-6938\",\r\n      Website: \"http://www.nowebsitescreenshop.com\",\r\n    },\r\n    {\r\n      ID: 5,\r\n      CompanyName: \"Braeburn\",\r\n      Address: \"1 Infinite Loop\",\r\n      City: \"Cupertino\",\r\n      State: \"California\",\r\n      Zipcode: 95014,\r\n      Phone: \"(408) 996-1010\",\r\n      Fax: \"(408) 996-1012\",\r\n      Website: \"http://www.nowebsitebraeburn.com\",\r\n    },\r\n    {\r\n      ID: 6,\r\n      CompanyName: \"PriceCo\",\r\n      Address: \"30 Hunter Lane\",\r\n      City: \"Camp Hill\",\r\n      State: \"Pennsylvania\",\r\n      Zipcode: 17011,\r\n      Phone: \"(717) 761-2633\",\r\n      Fax: \"(717) 761-2334\",\r\n      Website: \"http://www.nowebsitepriceco.com\",\r\n    },\r\n    {\r\n      ID: 7,\r\n      CompanyName: \"Ultimate Gadget\",\r\n      Address: \"1557 Watson Blvd\",\r\n      City: \"Warner Robbins\",\r\n      State: \"Georgia\",\r\n      Zipcode: 31093,\r\n      Phone: \"(995) 623-6785\",\r\n      Fax: \"(995) 623-6786\",\r\n      Website: \"http://www.nowebsiteultimategadget.com\",\r\n    },\r\n    {\r\n      ID: 8,\r\n      CompanyName: \"EZ Stop\",\r\n      Address: \"618 Michillinda Ave.\",\r\n      City: \"Arcadia\",\r\n      State: \"California\",\r\n      Zipcode: 91007,\r\n      Phone: \"(626) 265-8632\",\r\n      Fax: \"(626) 265-8633\",\r\n      Website: \"http://www.nowebsiteezstop.com\",\r\n    },\r\n    {\r\n      ID: 9,\r\n      CompanyName: \"Clicker\",\r\n      Address: \"1100 W. Artesia Blvd.\",\r\n      City: \"Compton\",\r\n      State: \"California\",\r\n      Zipcode: 90220,\r\n      Phone: \"(310) 884-9000\",\r\n      Fax: \"(310) 884-9001\",\r\n      Website: \"http://www.nowebsiteclicker.com\",\r\n    },\r\n    {\r\n      ID: 10,\r\n      CompanyName: \"Store of America\",\r\n      Address: \"2401 Utah Ave. South\",\r\n      City: \"Seattle\",\r\n      State: \"Washington\",\r\n      Zipcode: 98134,\r\n      Phone: \"(206) 447-1575\",\r\n      Fax: \"(206) 447-1576\",\r\n      Website: \"http://www.nowebsiteamerica.com\",\r\n    },\r\n    {\r\n      ID: 11,\r\n      CompanyName: \"Zone Toys\",\r\n      Address: \"1945 S Cienega Boulevard\",\r\n      City: \"Los Angeles\",\r\n      State: \"California\",\r\n      Zipcode: 90034,\r\n      Phone: \"(310) 237-5642\",\r\n      Fax: \"(310) 237-5643\",\r\n      Website: \"http://www.nowebsitezonetoys.com\",\r\n    },\r\n    {\r\n      ID: 12,\r\n      CompanyName: \"ACME\",\r\n      Address: \"2525 E El Segundo Blvd\",\r\n      City: \"El Segundo\",\r\n      State: \"California\",\r\n      Zipcode: 90245,\r\n      Phone: \"(310) 536-0611\",\r\n      Fax: \"(310) 536-0612\",\r\n      Website: \"http://www.nowebsiteacme.com\",\r\n    },\r\n  ]);\r\n  const [gridBoxValue, setGridBoxValue] = useState([]);\r\n  const [isGridBoxOpened, setIsGridBoxOpened] = useState(false);\r\n  const [isTreeBoxOpened, setIsTreeBoxOpened] = useState(false);\r\n\r\n  function dataGridRender() {\r\n    return (\r\n      <DataGrid\r\n        dataSource={gridDataSource}\r\n        columns={gridColumns}\r\n        hoverStateEnabled={true}\r\n        selectedRowKeys={gridBoxValue}\r\n        onSelectionChanged={dataGrid_onSelectionChanged}\r\n        height=\"100%\"\r\n      >\r\n        <Selection mode=\"single\" />\r\n        <Scrolling mode=\"virtual\" />\r\n        <Paging enabled={true} pageSize={10} />\r\n        <FilterRow visible={true} />\r\n      </DataGrid>\r\n    );\r\n  }\r\n\r\n  function syncDataGridSelection(e) {\r\n    setGridBoxValue(e?.value);\r\n  }\r\n\r\n  function dataGrid_onSelectionChanged(e) {\r\n    setGridBoxValue([\r\n      e?.selectedRowKeys[0]?.ID\r\n        ? e?.selectedRowKeys[0]?.ID\r\n        : e?.currentDeselectedRowKeys[0]?.ID,\r\n    ]);\r\n    setIsGridBoxOpened(false);\r\n  }\r\n\r\n  function gridBox_displayExpr(item) {\r\n    return item && `${item?.CompanyName} <${item?.Phone}>`;\r\n  }\r\n  function onGridBoxOpened(e) {\r\n    if (e.name === \"opened\") {\r\n      setIsGridBoxOpened(e?.value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <KeepAlive>\r\n      <React.Fragment>\r\n        <div className=\"dx-fieldset\">\r\n          <div className=\"dx-field\">\r\n            <div className=\"dx-field-value\">\r\n              <DropDownBox\r\n                value={gridBoxValue}\r\n                opened={isGridBoxOpened}\r\n                valueExpr=\"ID\"\r\n                deferRendering={false}\r\n                displayExpr={gridBox_displayExpr}\r\n                placeholder=\"Select a value...\"\r\n                showClearButton={true}\r\n                dataSource={gridDataSource}\r\n                onValueChanged={syncDataGridSelection}\r\n                onOptionChanged={onGridBoxOpened}\r\n                contentRender={dataGridRender}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n      </KeepAlive>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import DataGrid, {\r\n    Column, FilterRow, Pager,\r\n    Paging, Scrolling, Selection\r\n} from 'devextreme-react/data-grid';\r\nimport 'devextreme/data/odata/store';\r\nimport React, { useRef } from \"react\";\r\nimport './style.scss';\r\n\r\nconst priorities = [\r\n    { name: 'High', value: 4 },\r\n    { name: 'Urgent', value: 3 },\r\n    { name: 'Normal', value: 2 },\r\n    { name: 'Low', value: 1 }\r\n];\r\n\r\n\r\nconst DataGridCustom = (props: any) => {\r\n    const stageCanvasRef: any = useRef();\r\n    const propertyColumn = props.column;\r\n    const { propertyHeight, propertySelection, onCellDblClick, dataSource,filterRow } = props;\r\n    return (\r\n        <></>\r\n        // <DataGrid\r\n        //     className={'dx-card wide-card'}\r\n        //     dataSource={dataSource}\r\n        //     showBorders={true}\r\n        //     focusedRowEnabled={true}\r\n        //     defaultFocusedRowIndex={0}\r\n        //     columnAutoWidth={true}\r\n        //     height={propertyHeight || 100}\r\n        //     width={\"100%\"}\r\n        //     remoteOperations={true}\r\n        //     ref={stageCanvasRef}\r\n        //     onCellDblClick={onCellDblClick}\r\n        // >\r\n        //     <Scrolling mode=\"virtual\" rowRenderingMode=\"virtual\" />\r\n        //     {/* <Paging defaultPageSize={2} /> */}\r\n        //     <Pager showPageSizeSelector={true} showInfo={true} />\r\n        //     {propertySelection && <Selection\r\n        //         mode=\"multiple\"\r\n        //         selectAllMode={\"always\"}\r\n        //         showCheckBoxesMode={'onClick'}\r\n        //     />}\r\n\r\n        //     { filterRow &&  <FilterRow visible={true} />}\r\n\r\n        //     {/* <Column dataField={'Task_Status'} caption={'Loại Khám'} width={100} /> */}\r\n        //     {propertyColumn.map((index: any, key: any) => {\r\n        //         if(dataSource){\r\n        //             return <Column dataField={dataSource?.select[key]} caption={index.caption} width={index.width} key={index.dataField + '_' + key} />\r\n        //         }\r\n        //         else{\r\n        //             return <Column caption={index.caption} width={index.width} key={index.dataField + '_' + key} />\r\n        //         }\r\n        //     })}\r\n        // </DataGrid>\r\n    );\r\n}\r\nexport default DataGridCustom","import React, { useState } from \"react\";\r\nimport { Popup, Position, ToolbarItem } from \"devextreme-react/popup\";\r\nimport DataGridCustom from \"assets/grid/datagrid\";\r\nimport { RouteProps } from \"react-router\";\r\n\r\n\r\n\r\nconst PopupCustom  = (props:any)  => {\r\n\r\n  const hideInfo = () => {};\r\n  const {component} = props;\r\n  const CloseDialog = () => {\r\n    const method = props.onChangeVisible;\r\n    method();\r\n  }\r\n  const addButtonOptions = {\r\n    icon: \"cart\",\r\n    text: \"Add\",\r\n    onClick: hideInfo(),\r\n  };\r\n  const removeButtonOptions = {\r\n    icon: \"clear\",\r\n    text: \"Remove\",\r\n    onClick: hideInfo(),\r\n  };\r\n  const editButtonOptions = {\r\n    icon: \"edit\",\r\n    text: \"Edit\",\r\n    onClick: hideInfo(),\r\n  };\r\n\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <Popup\r\n        // visible={props.popupVisible}\r\n        // dragEnabled={false}\r\n        // closeOnOutsideClick={false}\r\n        // showCloseButton={true}\r\n        // showTitle={true}\r\n        // title=\"Dialog\"\r\n        // container=\".dx-viewport\"\r\n        // width={600}\r\n        // height={400}\r\n        // onVisibleChange={CloseDialog}\r\n        {...props}\r\n      >\r\n        <Position at=\"center\" my=\"center\" />\r\n        <ToolbarItem\r\n          widget=\"dxButton\"\r\n          toolbar=\"bottom\"\r\n          location=\"after\"\r\n          options={addButtonOptions}\r\n        />\r\n        <ToolbarItem\r\n          widget=\"dxButton\"\r\n          toolbar=\"bottom\"\r\n          location=\"after\"\r\n          options={removeButtonOptions}\r\n        />\r\n        <ToolbarItem\r\n          widget=\"dxButton\"\r\n          toolbar=\"bottom\"\r\n          location=\"after\"\r\n          options={editButtonOptions}\r\n        />\r\n      </Popup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopupCustom;\r\n","import ButtonCustom from 'assets/button/button';\r\nimport DataGridCustom from 'assets/grid/datagrid';\r\nimport PopupCustom from 'assets/popup/index';\r\nimport { SelectBox } from 'devextreme-react';\r\nimport { Button } from 'devextreme-react/button';\r\nimport Form, { GroupItem, Item, SimpleItem } from 'devextreme-react/form';\r\nimport 'devextreme-react/text-area';\r\nimport { DataGrid } from 'pages/index';\r\nimport React, { useState } from \"react\";\r\nimport KeepAlive from 'react-activation';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { addMenuRouter } from 'store/module/tagViews';\r\nimport './style.scss';\r\n\r\nconst employee = {\r\n    'ID': 1,\r\n    'FirstName': 'John',\r\n    'LastName': 'Heart',\r\n    'CompanyName': 'Super Mart of the West',\r\n    'Position': 'CEO',\r\n    'OfficeNo': '901',\r\n    'BirthDate': new Date(1964, 2, 16),\r\n    'HireDate': new Date(1995, 0, 15),\r\n    'Address': '351 S Hill St.',\r\n    'City': 'Los Angeles',\r\n    'State': 'CA',\r\n    'Zipcode': '90013',\r\n    'Phone': '+1(213) 555-9392',\r\n    'Email': 'jheart@dx-email.com',\r\n    'Skype': 'jheart_DX_skype'\r\n};\r\nconst positions = [\r\n    'HR Manager',\r\n    'IT Manager',\r\n    'CEO',\r\n    'Controller',\r\n    'Sales Manager',\r\n    'Support Manager',\r\n    'Shipping Manager'\r\n];\r\nconst withButtonEditorOptions = \"100%\";\r\nconst notesEditorOptions = { height: 80 };\r\n\r\nconst dataSource = {\r\n    store: {\r\n        type: 'odata',\r\n        key: 'Task_ID',\r\n        url: 'https://js.devexpress.com/Demos/DevAV/odata/Tasks'\r\n    },\r\n    expand: 'ResponsibleEmployee',\r\n    select: [\r\n        'Task_ID',\r\n        'Task_Subject',\r\n        'Task_Start_Date',\r\n        'Task_Due_Date',\r\n        'Task_Status',\r\n        'Task_Priority',\r\n        'Task_Completion',\r\n        'ResponsibleEmployee/Employee_Full_Name'\r\n    ]\r\n};\r\n\r\nexport interface IObject {\r\n    [key: string]: Object;\r\n}\r\n\r\n\r\n\r\nexport const GridTop = () => {\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const positionEditorOptions = { items: positions, searchEnabled: true, value: '' }\r\n    const hireDateEditorOptions = { width: '100%', value: null };\r\n    const validationRules = {\r\n        position: [\r\n            { type: 'required', message: 'Position is required.' },\r\n        ],\r\n        hireDate: [\r\n            { type: 'required', message: 'Hire Date is required.' }\r\n        ]\r\n    }\r\n\r\n    const handleButtonClick = (item: any): void => {\r\n        const { pathname, state }: any = location;\r\n        const ID = pathname.split('/')[2];\r\n        const buttonText = item.component.option('text');\r\n        const accessKey = item.component.option('accessKey');\r\n        const newObjectRoute: IObject = {};\r\n        newObjectRoute['meta'] = { icon: 'tab', text: buttonText, path: '/' + accessKey + '/' + ID };\r\n        dispatch(addMenuRouter([newObjectRoute]));\r\n        history.push('/' + accessKey + '/' + ID);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"form-container\">\r\n                {/* <Form\r\n                    colCount={2}\r\n                    id=\"form\"\r\n                    formData={{}}\r\n                    labelLocation={'left'}\r\n                    readOnly={false}\r\n                    showColonAfterLabel={true}\r\n                    showValidationSummary={true}\r\n                //validationGroup=\"customerData\"\r\n                >\r\n                    <GroupItem caption=\"\">\r\n                        <div style={{ border: \"0.5px solid\", boxShadow: \"2px 2px #888888\",height: \"120px\", textAlign: \"center\" }}>\r\n                            <Form\r\n                                colCount={6}\r\n                                id=\"form\"\r\n                                // formData={employee}\r\n                                labelLocation={'top'}\r\n                                readOnly={true}\r\n                                showColonAfterLabel={true}\r\n                                showValidationSummary={true}\r\n                            //validationGroup=\"customerData\"\r\n                            >\r\n                                <SimpleItem dataField=\"Họ Tên\" editorOptions={{ value: 'Tran Nhan Hieu' }} />\r\n                                <SimpleItem dataField=\"Giới Tính\" editorOptions={{ value: 'Nam' }} />\r\n                                <SimpleItem dataField=\"Tuổi\" editorOptions={{ value: '21' }} />\r\n                                <SimpleItem dataField=\"ID\" editorOptions={{ value: '651545' }} />\r\n                                <SimpleItem dataField=\"Rate\" editorOptions={{ value: '1.0' }} />\r\n                                <SimpleItem dataField=\"BHYT\" editorOptions={{ value: 'Đúng tuyến' }} />\r\n\r\n                            </Form>\r\n                            <Form\r\n                                colCount={5}\r\n                                id=\"form\"\r\n                                formData={employee}\r\n                                labelLocation={'top'}\r\n                                readOnly={false}\r\n                                showColonAfterLabel={true}\r\n                                showValidationSummary={true}\r\n                            //validationGroup=\"customerData\"\r\n                            >\r\n                                <GroupItem caption=\"\">\r\n                                    <ButtonCustom\r\n                                        // disabled={true}\r\n                                        // type=\"success\"\r\n                                        text=\"Khám Lâm Sàng\"\r\n                                        width={withButtonEditorOptions}\r\n                                    />\r\n                                </GroupItem>\r\n                                <GroupItem caption=\"\">\r\n                                    <Button\r\n                                        // type=\"success\"\r\n                                        accessKey={'thuthuatranghammat'}\r\n                                        text=\"thủ thuật răng hàm mặt\"\r\n                                        width={withButtonEditorOptions}\r\n                                        onClick={handleButtonClick}\r\n                                        className={'thuthuatranghammat'}\r\n                                    />\r\n                                </GroupItem>\r\n                                <GroupItem caption=\"\">\r\n                                    <Button\r\n                                        accessKey={'xetnghiem'}\r\n                                        // type=\"success\"\r\n                                        text=\"labo\"\r\n                                        width={withButtonEditorOptions}\r\n                                        onClick={handleButtonClick}\r\n                                    // onClick={this.doneClick} \r\n                                    />\r\n                                </GroupItem>\r\n                                <GroupItem caption=\"\">\r\n                                    <Button\r\n                                        accessKey={'xquang'}\r\n                                        // type=\"success\"\r\n                                        text=\"xquang\"\r\n                                        width={withButtonEditorOptions}\r\n                                        onClick={handleButtonClick}\r\n                                    // disabled={true}\r\n                                    // onClick={this.doneClick} \r\n                                    />\r\n                                </GroupItem>\r\n                            </Form>\r\n                        </div>\r\n                    </GroupItem>\r\n                    <GroupItem caption=\"\">\r\n                        <div style={{ border: \"0.5px solid\", boxShadow: \"2px 2px #888888\",height: \"120px\", textAlign: \"center\" }}>\r\n                            <Form\r\n                                colCount={3}\r\n                                id=\"form\"\r\n                                // formData={employee}\r\n                                labelLocation={'top'}\r\n                                readOnly={false}\r\n                                showColonAfterLabel={true}\r\n                                showValidationSummary={true}\r\n                            //validationGroup=\"customerData\"\r\n                            >\r\n                                <Item  dataField=\"Tiền Sử gia đình\" editorType=\"dxTextArea\" editorOptions={notesEditorOptions} icon=\"user\" />\r\n                                <Item dataField=\"Tiền Sử bệnh nhân\" editorType=\"dxTextArea\" editorOptions={notesEditorOptions} />\r\n                                <Item dataField=\"Dị ứng\" editorType=\"dxTextArea\" editorOptions={notesEditorOptions} />\r\n                            </Form>\r\n                        </div>\r\n                    </GroupItem>\r\n                </Form > */}\r\n            </div >\r\n        </React.Fragment >\r\n    )\r\n}\r\nexport const GridBody = () => {\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [isProperties, setIsProperties] = useState({});\r\n    const handleOnDbClickCell = (item: any) => {\r\n        console.log(item);\r\n    }\r\n    const handleButtonHoTroNM = (item: any) => {\r\n        setIsChecked(!isChecked);\r\n        setIsProperties({\r\n            title: 'Hỗ trợ ngôn ngữ', width: 400, height: 300, contentRender: () => <div className=\"dx-field\">\r\n                <div className=\"dx-field-label\">Hỗ trợ ngôn ngữ</div>\r\n                <div className=\"dx-field-value\">\r\n                    <SelectBox\r\n                        //   items={this.simpleProducts}\r\n                        placeholder=\"Choose Product\"\r\n                        showClearButton={true} />\r\n                </div>\r\n            </div>\r\n        });\r\n    }\r\n    const handleButtonTimKiem = (item: any) => {\r\n        setIsChecked(!isChecked);\r\n        setIsProperties({ title: '', width: 1000, height: 500, contentRender: () => <DataGridCustom column={[{ caption: 'Tên thuốc' }, { caption: 'Ngày kê đơn' }, { caption: 'Số lượng kê' }, { caption: 'Số lượng lấy' }, { caption: 'Đơn vị' }, { caption: 'Đường dùng' }, { caption: 'Cách dùng' }, { caption: 'Bác sĩ' }]} propertyHeight={350} filterRow={true} dataSource={dataSource} /> });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n       \r\n            <PopupCustom\r\n                visible={isChecked}\r\n                dragEnabled={false}\r\n                closeOnOutsideClick={false}\r\n                showCloseButton={true}\r\n                showTitle={true}\r\n                container=\".dx-viewport\"\r\n                // title=\"Dialog\"\r\n                // width={600}\r\n                // height={400}\r\n                onVisibleChange={() => setIsChecked(!isChecked)}\r\n                {...isProperties}\r\n            />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst BenhAnComponent = () => {\r\n    return (\r\n        <KeepAlive>\r\n            <React.Fragment>\r\n                <GridTop />\r\n                <GridBody />\r\n            </React.Fragment>\r\n        </KeepAlive>\r\n    )\r\n}\r\n\r\nexport default BenhAnComponent;","import React from \"react\";\r\nimport KeepAlive from \"react-activation\";\r\nimport  { GroupItem, Item, SimpleItem ,Form } from 'devextreme-react/form';\r\nimport { Button, SelectBox, Tabs } from \"devextreme-react\";\r\nimport ButtonCustom from \"assets/button/button\";\r\nimport './style.scss';\r\nimport DataGridCustom from \"assets/grid/datagrid\";\r\nimport { CheckBox } from 'devextreme-react/check-box';\r\n\r\nconst employee = {\r\n    'ID': 1,\r\n    'FirstName': 'John',\r\n    'LastName': 'Heart',\r\n    'CompanyName': 'Super Mart of the West',\r\n    'Position': 'CEO',\r\n    'OfficeNo': '901',\r\n    'BirthDate': new Date(1964, 2, 16),\r\n    'HireDate': new Date(1995, 0, 15),\r\n    'Address': '351 S Hill St.',\r\n    'City': 'Los Angeles',\r\n    'State': 'CA',\r\n    'Zipcode': '90013',\r\n    'Phone': '+1(213) 555-9392',\r\n    'Email': 'jheart@dx-email.com',\r\n    'Skype': 'jheart_DX_skype'\r\n};\r\nconst positions = [\r\n    'HR Manager',\r\n    'IT Manager',\r\n    'CEO',\r\n    'Controller',\r\n    'Sales Manager',\r\n    'Support Manager',\r\n    'Shipping Manager'\r\n];\r\nconst withButtonEditorOptions = \"100%\";\r\nconst notesEditorOptions = { height: 80 };\r\nexport const GridTop = () => {\r\n    return (\r\n        <>\r\n            <React.Fragment>\r\n          \r\n                    {/* <Form\r\n                        colCount={2}\r\n                        id=\"form\"\r\n                        formData={{}}\r\n                        labelLocation={'left'}\r\n                        readOnly={true}\r\n                        showColonAfterLabel={true}\r\n                        showValidationSummary={true}\r\n                    //validationGroup=\"customerData\"\r\n                    >\r\n                        <GroupItem caption=\"\">\r\n                            <div style={{ border: \"0.5px solid\", boxShadow: \"2px  2px #888888\", height: \"120px\", textAlign: \"center\" }}>\r\n                                <Form\r\n                                    colCount={6}\r\n                                    id=\"form\"\r\n                                    // formData={employee}\r\n                                    labelLocation={'top'}\r\n                                    readOnly={true}\r\n                                    showColonAfterLabel={true}\r\n                                    showValidationSummary={true}\r\n                                //validationGroup=\"customerData\"\r\n                                >\r\n                                    <SimpleItem dataField=\"Họ Tên\" editorOptions={{ value: 'Tran Nhan Hieu' }} />\r\n                                    <SimpleItem dataField=\"Giới Tính\" editorOptions={{ value: 'Nam' }} />\r\n                                    <SimpleItem dataField=\"Tuổi\" editorOptions={{ value: '21' }} />\r\n                                    <SimpleItem dataField=\"ID\" editorOptions={{ value: '651545' }} />\r\n                                    <SimpleItem dataField=\"Rate\" editorOptions={{ value: '1.0' }} />\r\n                                    <SimpleItem dataField=\"BHYT\" editorOptions={{ value: 'Đúng tuyến' }} />\r\n\r\n                                </Form>\r\n                                <Form\r\n                                    colCount={8}\r\n                                    id=\"form\"\r\n                                    // formData={employee}\r\n                                    labelLocation={'left'}\r\n                                    readOnly={true}\r\n                                    showColonAfterLabel={true}\r\n                                    showValidationSummary={true}\r\n                                //validationGroup=\"customerData\"\r\n                                >\r\n                                    <SimpleItem dataField=\"H\" editorOptions={{ value: '' }} />\r\n                                    <SimpleItem dataField=\"W\" editorOptions={{ value: '' }} />\r\n                                    <SimpleItem dataField=\"Ps\" editorOptions={{ value: '' }} />\r\n                                    <SimpleItem dataField=\"Pd\" editorOptions={{ value: '' }} />\r\n                                    <SimpleItem dataField=\"Hr\" editorOptions={{ value: '' }} />\r\n                                    <SimpleItem dataField=\"T\" editorOptions={{ value: '' }} />\r\n                                    <GroupItem caption=\"\">\r\n                                        <Button\r\n                                            accessKey={'chidinh'}\r\n                                            type=\"danger\"\r\n                                            text=\"Chỉ định\"\r\n                                            width={withButtonEditorOptions}\r\n                                        // onClick={handleButtonClick}\r\n                                        // onClick={this.doneClick} \r\n                                        />\r\n                                    </GroupItem>\r\n                                    <GroupItem caption=\"\">\r\n                                        <Button\r\n                                            accessKey={'ghichu'}\r\n                                            type=\"danger\"\r\n                                            text=\"Ghi Chú\"\r\n                                            width={withButtonEditorOptions}\r\n                                        // onClick={handleButtonClick}\r\n                                        // onClick={this.doneClick} \r\n                                        />\r\n                                    </GroupItem>\r\n                                </Form>\r\n                            </div>\r\n                        </GroupItem>\r\n                        <GroupItem caption=\"\">\r\n                            <div style={{ border: \"0.5px solid\", boxShadow: \"2px 2px #888888\", height: \"120px\", textAlign: \"center\" }}>\r\n                                <Form\r\n                                    colCount={2}\r\n                                    id=\"form\"\r\n                                    // formData={employee}\r\n                                    // labelLocation={'top'}\r\n                                    readOnly={true}\r\n                                    showColonAfterLabel={true}\r\n                                    showValidationSummary={true}\r\n                                //validationGroup=\"customerData\"\r\n                                >\r\n                                    <GroupItem caption=\"\">\r\n                                        <Form\r\n                                            colCount={3}\r\n                                            id=\"form\"\r\n                                            // formData={employee}\r\n                                            labelLocation={'top'}\r\n                                            readOnly={true}\r\n                                            showColonAfterLabel={true}\r\n                                            showValidationSummary={true}\r\n                                        //validationGroup=\"customerData\"\r\n                                        >\r\n                                            <SimpleItem dataField=\"Hẹn gần\" editorOptions={{ value: '' }} />\r\n                                            <SimpleItem dataField=\"Hẹn Xa\" editorOptions={{ value: '' }} />\r\n                                            <SimpleItem dataField=\"Người nhập KQ\" editorOptions={{ value: '' }} />\r\n                                        </Form>\r\n                                        <Form\r\n                                            colCount={4}\r\n                                            id=\"form\"\r\n                                            // formData={employee}\r\n                                            labelLocation={'left'}\r\n                                            readOnly={true}\r\n                                            showColonAfterLabel={true}\r\n                                            showValidationSummary={true}\r\n                                        //validationGroup=\"customerData\"\r\n                                        >\r\n                                            <GroupItem caption=\"\">\r\n                                                <Button\r\n                                                    accessKey={'sua'}\r\n                                                    type=\"success\"\r\n                                                    text=\"Sửa\"\r\n                                                    width={50}\r\n                                                // onClick={handleButtonClick}\r\n                                                // onClick={this.doneClick} \r\n                                                />\r\n                                            </GroupItem>\r\n                                            <GroupItem caption=\"\">\r\n                                                <Button\r\n                                                    accessKey={'dalaybp'}\r\n                                                    type=\"success\"\r\n                                                    text=\"Đã lấy BP\"\r\n                                                    width={withButtonEditorOptions}\r\n                                                // onClick={handleButtonClick}\r\n                                                // onClick={this.doneClick} \r\n                                                />\r\n                                            </GroupItem>\r\n                                            <GroupItem caption=\"\">\r\n                                                <Button\r\n                                                    accessKey={'dathuchien'}\r\n                                                    type=\"success\"\r\n                                                    text=\"Đã Thực Hiện\"\r\n                                                    width={withButtonEditorOptions}\r\n                                                // onClick={handleButtonClick}\r\n                                                // onClick={this.doneClick} \r\n                                                />\r\n                                            </GroupItem>\r\n                                            <GroupItem caption=\"\">\r\n                                                <Button\r\n                                                    accessKey={'sangloctruocsinh'}\r\n                                                    type=\"success\"\r\n                                                    text=\"Sàng lọc trước sinh\"\r\n                                                    width={withButtonEditorOptions}\r\n                                                // onClick={handleButtonClick}\r\n                                                // onClick={this.doneClick} \r\n                                                />\r\n                                            </GroupItem>\r\n                                        </Form>\r\n                                    </GroupItem>\r\n                                    <GroupItem>\r\n                                        <Form\r\n                                            colCount={2}\r\n                                            id=\"form\"\r\n                                            labelLocation={'top'}\r\n                                            showColonAfterLabel={true}\r\n                                            showValidationSummary={true}\r\n                                            readOnly={true}\r\n                                        >\r\n                                            <GroupItem caption=\"\">\r\n                                                <SimpleItem dataField=\"H\" editorOptions={{ value: '' }} />\r\n                                            </GroupItem>\r\n                                            <GroupItem caption=\"\">\r\n                                                <SimpleItem dataField=\"W\" editorOptions={{ value: '' }} />\r\n                                            </GroupItem>\r\n                                        </Form>\r\n                                        <Form\r\n                                            colCount={1}\r\n                                            id=\"form\"\r\n                                            labelLocation={'top'}\r\n                                            showColonAfterLabel={true}\r\n                                            showValidationSummary={true}\r\n                                        >\r\n                                            <GroupItem>\r\n                                                <Button\r\n                                                    accessKey={'sangloctruocsinh'}\r\n                                                    type=\"success\"\r\n                                                    text=\"RENAL,LDLC,LIPID\"\r\n                                                    width={withButtonEditorOptions}\r\n                                                // onClick={handleButtonClick}\r\n                                                // onClick={this.doneClick} \r\n                                                />\r\n                                            </GroupItem>\r\n                                        </Form>\r\n                                    </GroupItem>\r\n                                </Form>\r\n                            </div>\r\n                        </GroupItem>\r\n                    </Form >\r\n        */}\r\n            </React.Fragment >\r\n        </>\r\n    )\r\n}\r\nexport const GridBody = () => {\r\n    const handleOnDbClickCell = () => { };\r\n    return (\r\n        <>\r\n            <React.Fragment>\r\n                {/* <Form\r\n                    colCount={2}\r\n                    id=\"form\"\r\n                    formData={{}}\r\n                    // labelLocation={'left'}\r\n                    readOnly={false}\r\n                    showColonAfterLabel={true}\r\n                    showValidationSummary={true}\r\n                //validationGroup=\"customerData\"\r\n                >\r\n                    <GroupItem caption=\"\">\r\n                        <DataGridCustom column={[{ caption: 'Tên thuốc' }, { caption: 'Giá bán' }, { caption: 'Đ.Dùng' }, { caption: 'SL' }, { caption: 'tổng' }, { caption: 'C.dùng' }, { caption: 'T.hiện' }, { caption: 'Cách dùng chi tiết' }]} propertySelection={true} propertyHeight={110} onCellDblClick={handleOnDbClickCell} />\r\n                        <DataGridCustom column={[{ caption: 'Tên thuốc' }, { caption: 'Giá bán' }, { caption: 'Đ.Dùng' }, { caption: 'SL' }, { caption: 'tổng' }, { caption: 'C.dùng' }, { caption: 'T.hiện' }, { caption: 'Cách dùng chi tiết' }]} propertySelection={true} propertyHeight={210} onCellDblClick={handleOnDbClickCell} />\r\n                        <DataGridCustom column={[{ caption: 'Tên thuốc' }, { caption: 'Giá bán' }, { caption: 'Đ.Dùng' }, { caption: 'SL' }, { caption: 'tổng' }, { caption: 'C.dùng' }, { caption: 'T.hiện' }, { caption: 'Cách dùng chi tiết' }]} propertySelection={true} propertyHeight={110} onCellDblClick={handleOnDbClickCell} />\r\n\r\n                    </GroupItem>\r\n                    <GroupItem caption=\"\">\r\n                        <div style={{border: \"0.5px solid\", boxShadow: \"2px 2px #888888\", height: \"113px\", textAlign: \"center\" }}>\r\n                            <Form\r\n                                colCount={2}\r\n                                id=\"form\"\r\n                                // formData={employee}\r\n                                labelLocation={'left'}\r\n                                readOnly={true}\r\n                                showColonAfterLabel={true}\r\n                                showValidationSummary={true}\r\n                            //validationGroup=\"customerData\"\r\n                            >\r\n                                <GroupItem>\r\n                                    <Form\r\n                                        colCount={2}\r\n                                        id=\"form\"\r\n                                        // formData={employee}\r\n                                        labelLocation={'left'}\r\n                                        readOnly={true}\r\n                                        showColonAfterLabel={true}\r\n                                        showValidationSummary={true}\r\n                                    //validationGroup=\"customerData\"\r\n                                    >\r\n                                        <SimpleItem dataField=\"Giờ khám\" editorOptions={{ value: '15:31 14/10/2021' }} />\r\n                                        <GroupItem>\r\n                                            <CheckBox defaultValue={false} text=\"In rút gọn\" />\r\n                                            <CheckBox defaultValue={false} text=\"In chữ ký\" />\r\n\r\n                                        </GroupItem>\r\n                                    </Form>\r\n                                </GroupItem>\r\n                                <GroupItem>\r\n                                    <Form\r\n                                        colCount={4}\r\n                                        id=\"form\"\r\n                                        // formData={employee}\r\n                                        labelLocation={'left'}\r\n                                        readOnly={true}\r\n                                        // showColonAfterLabel={true}\r\n                                        // showValidationSummary={true}\r\n                                    //validationGroup=\"customerData\"\r\n                                    >\r\n                                        <GroupItem>\r\n                                            <Button\r\n                                                accessKey={'reload'}\r\n                                                type=\"success\"\r\n                                                text=\"reload\"\r\n                                                width={50}\r\n                                            // onClick={handleButtonClick}\r\n                                            // onClick={this.doneClick} \r\n                                            />\r\n                                        </GroupItem>\r\n                                        <GroupItem>\r\n                                            <Button\r\n                                                accessKey={'inta'}\r\n                                                type=\"success\"\r\n                                                text=\"In TA\"\r\n                                                width={50}\r\n                                            // onClick={handleButtonClick}\r\n                                            // onClick={this.doneClick} \r\n                                            />\r\n                                        </GroupItem>\r\n                                        <GroupItem>\r\n                                            <Button\r\n                                                accessKey={'insars'}\r\n                                                type=\"success\"\r\n                                                text=\"In Sars\"\r\n                                                width={50}\r\n                                            // onClick={handleButtonClick}\r\n                                            // onClick={this.doneClick} \r\n                                            />\r\n                                        </GroupItem>\r\n                                        <GroupItem>\r\n                                            <Button\r\n                                                accessKey={'xemin'}\r\n                                                type=\"success\"\r\n                                                text=\"xemin\"\r\n                                                width={50}\r\n                                            // onClick={handleButtonClick}\r\n                                            // onClick={this.doneClick} \r\n                                            />\r\n                                        </GroupItem>\r\n                                    </Form>\r\n                                </GroupItem>\r\n                            </Form>\r\n                            <Form\r\n                                colCount={5}\r\n                                id=\"form\"\r\n                                // formData={employee}\r\n                                labelLocation={'top'}\r\n                                readOnly={false}\r\n                                showColonAfterLabel={true}\r\n                                showValidationSummary={true}\r\n                            //validationGroup=\"customerData\"\r\n                            >\r\n                                <GroupItem>\r\n                                    <SimpleItem dataField=\"Sample ID\" editorOptions={{ value: '989901' }} />\r\n                                </GroupItem>\r\n                                <GroupItem>\r\n                                    <Item dataField=\"KQ\" editorType=\"dxSelectBox\"\r\n                                    // editorOptions={positionEditorOptions}\r\n                                    // validationRules={this.validationRules.position} \r\n                                    />\r\n                                </GroupItem>\r\n                                <GroupItem>\r\n                                    <Item editorType=\"dxSelectBox\" dataField=\"Loại XN\" />\r\n                                </GroupItem>\r\n                                <GroupItem>\r\n                                    <Item editorType=\"dxSelectBox\" dataField=\"Chỉ số\" />\r\n                                </GroupItem>\r\n                                <GroupItem>\r\n                                    <Item editorType=\"dxSelectBox\" dataField=\"XN Trùng\" />\r\n                                </GroupItem>\r\n                            </Form>\r\n                        </div>\r\n                        <DataGridCustom column={[{ caption: 'Tên thuốc' }, { caption: 'Giá bán' }, { caption: 'Đ.Dùng' }, { caption: 'SL' }, { caption: 'tổng' }, { caption: 'C.dùng' }, { caption: 'T.hiện' }, { caption: 'Cách dùng chi tiết' }]} propertySelection={true} propertyHeight={330} onCellDblClick={handleOnDbClickCell} />\r\n                    </GroupItem>\r\n                </Form > */}\r\n            </React.Fragment >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function XenghiemLabo() {\r\n    return (\r\n        <KeepAlive>\r\n            <React.Fragment>\r\n                <GridTop />\r\n                <GridBody />\r\n            </React.Fragment>\r\n        </KeepAlive>\r\n    )\r\n}","\r\n    // import React from 'react'\r\n    \r\n    // export default function RichTextContract() {\r\n    //   return (\r\n    //     <div>richtext-editor</div>\r\n    //   )\r\n    // }\r\n    import React from 'react';\r\n\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport 'devexpress-richedit/dist/dx.richedit.css';\r\n\r\nimport { create, createOptions, RichEdit, ViewType, RichEditUnit, DocumentFormat } from 'devexpress-richedit';\r\n\r\nfunction RichTextContract() {\r\n  return (\r\n    <RichEditComponent/>\r\n  );\r\n}\r\n\r\nexport default RichTextContract;\r\n\r\nclass RichEditComponent extends React.Component {\r\n  rich = RichEdit; \r\n\r\n  componentDidMount() {\r\n    // the createOptions() method creates an object that contains RichEdit options initialized with default values\r\n    const options = createOptions();\r\n\r\n    options.bookmarks.visibility = true;\r\n    options.bookmarks.color = '#ff0000';\r\n\r\n    options.confirmOnLosingChanges.enabled = true;\r\n    options.confirmOnLosingChanges.message = 'Are you sure you want to perform the action? All unsaved document data will be lost.';\r\n\r\n    options.fields.updateFieldsBeforePrint = true;\r\n    options.fields.updateFieldsOnPaste = true;\r\n\r\n    options.mailMerge.activeRecord = 2;\r\n    options.mailMerge.viewMergedData = true;\r\n    options.mailMerge.dataSource = [\r\n        { Name: 'Indy', age: 32 },\r\n        { Name: 'Andy', age: 28 },\r\n    ];\r\n\r\n    // events\r\n    options.events.activeSubDocumentChanged = () => { };\r\n    options.events.autoCorrect = () => { };\r\n    options.events.calculateDocumentVariable = () => { };\r\n    options.events.characterPropertiesChanged = () => { };\r\n    options.events.contentInserted = () => { };\r\n    options.events.contentRemoved = () => { };\r\n    options.events.documentChanged = () => { };\r\n    options.events.documentFormatted = () => { };\r\n    options.events.documentLoaded = () => { };\r\n    options.events.gotFocus = () => { };\r\n    options.events.hyperlinkClick = () => { };\r\n    options.events.keyDown = () => { };\r\n    options.events.keyUp = () => { };\r\n    options.events.paragraphPropertiesChanged = () => { };\r\n    options.events.lostFocus = () => { };\r\n    options.events.pointerDown = () => { };\r\n    options.events.pointerUp = () => { };\r\n    options.events.saving = () => { };\r\n    options.events.saved = () => { };\r\n    options.events.selectionChanged = () => { };    \r\n    options.events.customCommandExecuted = (s, e) => {\r\n        switch (e.commandName) {\r\n        case 'insertEmailSignature':\r\n            s.document.insertParagraph(s.document.length);\r\n            s.document.insertText(s.document.length, '_________');\r\n            s.document.insertParagraph(s.document.length);\r\n            s.document.insertText(s.document.length, 'Best regards,');\r\n            s.document.insertParagraph(s.document.length);\r\n            s.document.insertText(s.document.length, 'John Smith');\r\n            s.document.insertParagraph(s.document.length);\r\n            s.document.insertText(s.document.length, 'mailto:john@example.com');\r\n            s.document.insertParagraph(s.document.length);\r\n            s.document.insertText(s.document.length, '+1 (818) 844-0000');\r\n            break;\r\n        }\r\n    };\r\n\r\n    options.unit = RichEditUnit.Inch;\r\n\r\n    options.view.viewType = ViewType.PrintLayout;\r\n    options.view.simpleViewSettings.paddings = {\r\n        left: 15,\r\n        top: 15,\r\n        right: 15,\r\n        bottom: 15,\r\n    };\r\n    options.exportUrl = 'https://siteurl.com/api/';\r\n\r\n    options.readOnly = false;\r\n    options.width = '1400px';\r\n    options.height = '800px';\r\n\r\n    this.rich = create(document.getElementById(\"richEdit\"), options);\r\n    \r\n    var documentAsBase64 = \"e1xydGYxXGRlZmYwe1xmb250dGJse1xmMCBDYWxpYnJpO319e1xjb2xvcnRibCA7XHJlZDB\"\r\n        + \"cZ3JlZW4wXGJsdWUyNTUgO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NSA7fXtcKlxkZWZjaHAgXGZzMjJ9e1xzdHl\"\r\n        + \"sZXNoZWV0IHtccWxcZnMyMiBOb3JtYWw7fXtcKlxjczFcZnMyMiBEZWZhdWx0IFBhcmFncmFwaCBGb250O317XCp\"\r\n        + \"cY3MyXGZzMjJcY2YxIEh5cGVybGluazt9e1wqXHRzM1x0c3Jvd2RcZnMyMlxxbFx0c3ZlcnRhbHRcdHNjZWxsY2J\"\r\n        + \"wYXQyXHRzY2VsbHBjdDBcY2x0eGxydGIgTm9ybWFsIFRhYmxlO319e1wqXGxpc3RvdmVycmlkZXRhYmxlfXtcaW5\"\r\n        + \"mb31cbm91aWNvbXBhdFxzcGx5dHduaW5lXGh0bWF1dHNwXGV4cHNocnRuXHNwbHRwZ3BhclxkZWZ0YWI3MjBcc2V\"\r\n        + \"jdGRcbWFyZ2xzeG4xNDQwXG1hcmdyc3huMTQ0MFxtYXJndHN4bjE0NDBcbWFyZ2JzeG4xNDQwXGhlYWRlcnk3MjB\"\r\n        + \"cZm9vdGVyeTcyMFxwZ3dzeG4xMjI0MFxwZ2hzeG4xNTg0MFxjb2xzMVxjb2xzeDcyMFxwYXJkXHBsYWluXHFse1x\"\r\n        + \"mczIyXGNmMFxjczEgRG9jdW1lbnQgdGV4dH1cZnMyMlxjZjBccGFyfQ==\";\r\n    this.rich.openDocument(documentAsBase64, 'DocumentName', DocumentFormat.Rtf);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n       <div id=\"richEdit\"></div>\r\n    );\r\n }\r\n}\r\n","import axios from \"axios\";\r\nimport { API_URL } from \"../constant\";\r\nexport default function callApi(enpoint, method, body) {\r\n  return axios({\r\n    method,\r\n    url: `${API_URL}/${enpoint}`,\r\n    data: body,\r\n  })\r\n    .catch((err) => {\r\n    console.log(err);\r\n  });\r\n}","export const get = \"GET\";\r\nexport const post = \"POST\";\r\nexport const put = \"PUT\";\r\nexport const patch = \"PATCH\";\r\nexport const del = \"DELETE\";\r\nexport const API_URL = \"http://localhost:7000\";","import axios from \"axios\";\r\nimport { get, post, patch, del } from \"./constant\";\r\nimport callApi from \"./utils/api\";\r\n\r\nexport const getApi = function (param) {\r\n  return callApi(param, get, null);\r\n};\r\nexport const postApi = function (param, data) {\r\n  return callApi(param, post, data);\r\n}; \r\nexport const patchApi = function (param, data) {\r\n  return callApi(param, patch, data);\r\n};","import React, { useState, useMemo,useContext,useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport RichTextContract from \"./richtext-editor\";\r\nimport { getApi, patchApi } from \"../../callApi\";\r\nexport default function Contract() {\r\n  let { id } = useParams();\r\n  useEffect(() => {\r\n    getApi(\r\n      `users/${id}?join=chucvu%7C%7Cid,tenchucvu&join=chucdanh&join=thoihanhopdong&join=dmhopdong&join=dmtrinhdo&join=dmdantoc&join=dmquoctich&join=dmloaitinhluong&join=dmnganhang&join=dmdonvi&join=dmbophan&join=dmphongban&join=dmloaikhoi&join=tinhtranghonnhan&join=chuyenkhoa&join=nhanvienhopdongs&join=nccmnd&join=nccchn&join=phamvichungchihanhnghe&join=phamvihanhnghebosung&join=dienthianhvans&join=nhanvienbangcaps&join=nhanvienbangcaps.loaibangcap&join=nhanvienhopdongs.loaihopdong`\r\n    ).then((data) => {\r\n      console.log(data?.data,\"data nè\");\r\n    });\r\n  }, []);\r\n  return (\r\n\r\n<RichTextContract/> \r\n  \r\n  );\r\n}\r\n","import React, {\r\n    createContext,\r\n\r\n  } from \"react\";\r\n  export const ThemContext = createContext();\r\n  export const ContractContext = createContext();","import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport DataGrid, {\r\n  Column,\r\n  Grouping,\r\n  Selection,\r\n  FilterRow,\r\n  Scrolling,\r\n  GroupPanel,\r\n  Summary,\r\n  GroupItem,\r\n  Editing,\r\n  Popup,\r\n  Paging,\r\n  Form,\r\n  Lookup,\r\n} from \"devextreme-react/data-grid\";\r\nimport { Item } from \"devextreme-react/form\";\r\nimport DropDownBox from \"devextreme-react/drop-down-box\";\r\nimport CheckBox from \"devextreme-react/check-box\";\r\nimport \"./new-staff.scss\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.material.blue.light.compact.css\";\r\nimport CustomStore from \"devextreme/data/custom_store\";\r\nimport \"whatwg-fetch\";\r\nimport \"devextreme-intl\";\r\nimport Contract from \"pages/contract/contract\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {ContractContext} from '../template-contract/Context'\r\nfunction isNotEmpty(value) {\r\n  return value !== undefined && value !== null && value !== \"\";\r\n}\r\nfunction handleErrors(response) {\r\n  if (!response.ok) throw Error(response.statusText);\r\n  return response;\r\n}\r\n\r\nconst store = new CustomStore({\r\n  key: \"id\",\r\n  load(loadOptions) {\r\n    let params = \"?\";\r\n    [\"page\"].forEach((i) => {\r\n      if (i in loadOptions && isNotEmpty(loadOptions[i])) {\r\n        params += `${i}=${JSON.stringify(loadOptions[i])}&`;\r\n      }\r\n    });\r\n    params = params.slice(0, -1);\r\n    return fetch(\r\n      `http://localhost:7000/users?join=chucvu%7C%7Cid,tenchucvu&join=chucdanh&join=thoihanhopdong&join=dmhopdong&join=dmtrinhdo&join=dmdantoc&join=dmquoctich&join=dmloaitinhluong&join=dmnganhang&join=dmdonvi&join=dmbophan&join=dmphongban&join=dmloaikhoi&join=tinhtranghonnhan&join=chuyenkhoa&join=nhanvienhopdongs&join=nccmnd&join=nccchn&join=phamvichungchihanhnghe&join=phamvihanhnghebosung&join=dienthianhvans&join=nhanvienbangcaps&join=nhanvienbangcaps.loaibangcap&join=nhanvienhopdongs.loaihopdong${params}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => ({\r\n        data: data.data,\r\n        count: data.count,\r\n        total: data.total,\r\n        pageCount: data.pageCount,\r\n      }))\r\n      .catch(() => {\r\n        throw new Error(\"Data Loading Error\");\r\n      });\r\n  },\r\n  onInserting: function (values, key) {\r\n    // Your code goes here\r\n  },\r\n  insert: (values) => {\r\n    return fetch(\"http://localhost:7000/users\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(handleErrors);\r\n  },\r\n  update: (key, values) => {\r\n    return fetch(`http://localhost:7000/users/${encodeURIComponent(key)}`, {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify(values),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(handleErrors);\r\n  },\r\n});\r\n\r\nconst phongban = JSON.parse(localStorage.getItem(\"phongban\"));\r\nfunction NewStaff() { \r\n  let history = useHistory();\r\n  const [autoExpandAll, setautoExpandAll] = useState(true);\r\n  const [focusedRowKey, setFocusRowKey] = useState(1);\r\n  const [focusedRowIndex, setFocusRowIndex] = useState(1);\r\n  const [autoNavigateToFocusedRow, setautoNavigateToFocusedRow] =\r\n    useState(true);\r\n\r\n  const onFocusedRowChanged = (e) => {\r\n    setFocusRowIndex(e.component.option(\"focusedRowIndex\"));\r\n    setFocusRowKey(e.component.option(\"focusedRowKey\"));\r\n  };\r\n  const dataGrid = useRef(null);\r\n  const collapseAllGroups = () => {\r\n    dataGrid.current.instance.collapseAll();\r\n  };\r\n  const expandAllGroups = () => {\r\n    dataGrid.current.instance.expandAll();\r\n  };\r\n\r\n  // const employeesStore = new ArrayStore({\r\n  //   data: JSON.parse(phongban),\r\n  //   key: \"id\",\r\n  // });\r\n  function editEmployee() {\r\n    dataGrid.current.instance.editRow(focusedRowIndex);\r\n  }\r\n  function onContentReady(e) {\r\n    e.component.columnOption(\"command:edit\", \"visible\", false);\r\n  }\r\n  function handleContract() {\r\n    //setvisible = true\r\n    console.log(dataGrid.current.instance.getSelectedRowsData(),'nè ')\r\n    if(focusedRowKey){\r\n      history.push(`/new-staff/${focusedRowKey}`);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <button onClick={expandAllGroups}>Mở</button>\r\n      <button onClick={collapseAllGroups}>Đóng</button>\r\n      <button onClick={editEmployee}>Sửa</button>\r\n      <button onClick={handleContract}>Hợp đồng nhân viên</button>\r\n      <DataGrid\r\n        onContentReady={onContentReady}\r\n        className=\"dgr-staff\"\r\n        dataSource={store}\r\n        columnWidth={160}\r\n        width=\"100%\"\r\n        height=\"400\"\r\n        showBorders={true}\r\n        allowColumnReordering={true}\r\n        focusedRowEnabled={true}\r\n        focusedRowKey={focusedRowKey}\r\n        focusedRowIndex={focusedRowIndex}\r\n        autoNavigateToFocusedRow={autoNavigateToFocusedRow}\r\n        onFocusedRowChanged={onFocusedRowChanged}\r\n        keyExpr=\"id\"\r\n        ref={dataGrid}\r\n      >\r\n        <Editing\r\n          mode=\"popup\"\r\n          allowUpdating={true}\r\n          allowAdding={true}\r\n          allowDeleting={true}\r\n        >\r\n          <Popup title=\"Nhân viên\" showTitle={true} width={700} height={525} />\r\n          {/* <Form>\r\n            <Item dataField=\"tennhanvien\" /> \r\n            <Item dataField=\"holotNhanVien\" dataType=\"string\" caption=\"Họ lót\"/>\r\n            <Item dataField=\"nickname\" />\r\n          </Form> */}\r\n        </Editing>\r\n        <Column dataField=\"holotNhanVien\" dataType=\"string\" caption=\"Họ lót\" />\r\n        <Column\r\n          dataField=\"tennhanvien\"\r\n          dataType=\"string\"\r\n          caption=\"Tên nhân viên\"\r\n        />\r\n        <Column dataField=\"nickname\" dataType=\"string\" caption=\"Nick Name\" />\r\n        <Column\r\n          dataField=\"dmphongban.tenphongban\"\r\n          dataType=\"string\"\r\n          caption=\"Phòng ban\"\r\n          groupIndex={0}\r\n        />\r\n        <Column dataField=\"phongbanId\" caption=\"Phong ban\" width={125}>\r\n          <Lookup\r\n            dataSource={phongban}\r\n            valueExpr=\"id\"\r\n            displayExpr=\"tenphongban\"\r\n          />\r\n        </Column>\r\n\r\n        {/* <Column\r\n          dataField=\"dmdonvi.tendonvi\"\r\n          dataType=\"string\"\r\n          caption=\"Tên đơn vị\"\r\n        />\r\n        <Column\r\n          dataField=\"dmbophan.tenbophan\"\r\n          dataType=\"string\"\r\n          caption=\"Tên bộ phận\"\r\n        />\r\n        <Column dataField=\"phongbanId\" caption=\"Phongban\" width={125}>\r\n          <Lookup\r\n            dataSource={phongban}\r\n            valueExpr=\"id\"\r\n            displayExpr=\"tenphongban\"\r\n          />\r\n        </Column>\r\n        <Column\r\n          dataField=\"dmphongban.tenphongban\"\r\n          dataType=\"string\"\r\n          caption=\"Phòng ban\"\r\n          groupIndex={0}\r\n        />\r\n        <Column\r\n          dataField=\"dmloaikhoi.tenloaikhoi\"\r\n          dataType=\"string\"\r\n          caption=\"Khối\"\r\n        />\r\n        <Column\r\n          dataField=\"dmtrinhdo.tentrinhdo\"\r\n          dataType=\"string\"\r\n          caption=\"Trình độ\"\r\n        /> */}\r\n        <Column\r\n          dataField=\"gioitinh\"\r\n          dataType=\"string\"\r\n          caption=\"Giới tính\"\r\n          cellRender={cellRenderGioiTinh}\r\n        />\r\n        <Column dataField=\"ngaysinh\" dataType=\"date\" caption=\"Ngày sinh\" />\r\n        {/* <Column\r\n          dataField=\"chucvu.tenchucvu\"\r\n          dataType=\"string\"\r\n          caption=\"Chức vụ\"\r\n        />\r\n        <Column\r\n          dataField=\"chucdanh.tenchucdanh\"\r\n          dataType=\"string\"\r\n          caption=\"Chuyên môn\"\r\n        />\r\n        <Column\r\n          dataField=\"chuyenkhoa.tenchuyenkhoa\"\r\n          dataType=\"string\"\r\n          caption=\"Chuyên khoa\"\r\n        /> */}\r\n        <Column dataField=\"kinhnghiem\" dataType=\"date\" caption=\"Kinh nghiệm\" />\r\n        <Column dataField=\"ngayvaolam\" dataType=\"date\" caption=\"Ngày vào làm\" />\r\n        <Column\r\n          dataField=\"nhanvienhopdongs\"\r\n          dataType=\"string\"\r\n          caption=\"Hợp đồng\"\r\n          cellRender={cellRenderHopDong}\r\n        />\r\n        <Column dataField=\"id\" dataType=\"number\" caption=\"ID\" />\r\n        <Column\r\n          dataField=\"ngaybatdauHopDong\"\r\n          dataType=\"date\"\r\n          caption=\"Ngày bắt đầu\"\r\n        />\r\n        <Column\r\n          dataField=\"ngayketthucHopDong\"\r\n          dataType=\"date\"\r\n          caption=\"Ngày kết thúc\"\r\n        />\r\n        {/* <Column\r\n          dataField=\"thoihanhopdong.tenthoihanhopdong\"\r\n          dataType=\"string\"\r\n          caption=\"Thời hạn hợp đồng\"\r\n        /> */}\r\n        <Column\r\n          dataField=\"nhanvienbangcaps\"\r\n          width=\"200\"\r\n          caption=\"Bằng cấp\"\r\n          cellRender={cellRenderBangCap}\r\n        />\r\n        <Column\r\n          dataField=\"diachi\"\r\n          width=\"200\"\r\n          caption=\"Địa chỉ\"\r\n          dataType=\"string\"\r\n        />\r\n        <Column dataField=\"mobile\" dataType=\"string\" caption=\"Số điện thoại\" />\r\n        <Column\r\n          dataField=\"homePhone\"\r\n          dataType=\"string\"\r\n          caption=\"Số điện thoại 2\"\r\n        />\r\n        <Column dataField=\"cmnd\" dataType=\"string\" caption=\"CMND\" />\r\n        <Column dataField=\"email\" dataType=\"string\" caption=\"Emal\" />\r\n        <Column\r\n          dataField=\"masothuecanhan\"\r\n          dataType=\"string\"\r\n          caption=\"Mã số thuế cá nhân\"\r\n        />\r\n        <Column dataField=\"sobaohiem\" dataType=\"string\" caption=\"Số bảo hiểm\" />\r\n        <Column dataField=\"ghichu\" dataType=\"string\" caption=\"Ghi chú\" />\r\n        <Column dataField=\"\" caption=\"Lương SP\" dataType=\"string\" />\r\n        <Column\r\n          dataField=\"danghiviec\"\r\n          dataType=\"string\"\r\n          caption=\"Đã nghỉ viêc\"\r\n          cellRender={cellRenderCheckBox}\r\n        />\r\n        <Column\r\n          dataField=\"isLichBacSy\"\r\n          dataType=\"string\"\r\n          caption=\"Là bác sĩ\"\r\n          cellRender={cellRenderCheckBox}\r\n        />\r\n        {/* <Column\r\n          dataField=\"isCongTacVienBenNgoai.tenchucvu\"\r\n          dataType=\"string\"\r\n          caption=\"Là cộng tác viên\"\r\n          cellRender={cellRenderCheckBox}\r\n        />\r\n        <Column\r\n          dataField=\"tinhtranghonnhan.tinhtranghonnhan\"\r\n          dataType=\"string\"\r\n          caption=\"Gia đình\"\r\n        /> */}\r\n        <Column\r\n          dataField=\"ngaynghiviec\"\r\n          dataType=\"string\"\r\n          caption=\"Ngày nghỉ việc\"\r\n        />\r\n        <Column\r\n          dataField=\"soChungChiHanhNghe\"\r\n          dataType=\"string\"\r\n          caption=\"Số CCHN\"\r\n        />\r\n        <Selection mode=\"single\" />\r\n\r\n        <Scrolling\r\n          rowRenderingMode=\"virtual\"\r\n          mode=\"virtual\"\r\n          columnRenderingMode=\"virtual\"\r\n        />\r\n\r\n        <FilterRow visible={true} />\r\n\r\n        <Grouping autoExpandAll={autoExpandAll} />\r\n        <GroupPanel visible={true} />\r\n        <Summary>\r\n          <GroupItem\r\n            column=\"Id\"\r\n            summaryType=\"count\"\r\n            displayFormat=\"Số lượng:{0}\"\r\n          />\r\n        </Summary>\r\n      </DataGrid>\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default NewStaff;\r\n\r\nfunction cellRenderBangCap(data) {\r\n  return (\r\n    <ul>\r\n      {data?.value?.map((item) => (\r\n        <li key={item.id}>{item.loaibangcap.tenloaibangcap}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nfunction cellRenderHopDong(data) {\r\n  return (\r\n    <ul>\r\n      {data?.value?.map((item) => (\r\n        <li key={item?.id}>{item?.loaihopdong?.tenloaihopdong}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nfunction cellRenderCheckBox(data) {\r\n  return <CheckBox value={data.value} iconSize={30} />;\r\n}\r\nfunction cellRenderGioiTinh(data) {\r\n  return <div>{data.value === true ? \"nam\" : \"nữ\"}</div>;\r\n}\r\n","import ApiConstants from '../ApiConstants'\r\n// import AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport axios from 'axios'\r\n\r\nexport default async function api(\r\n  path: string,\r\n  params: {} | null = {},\r\n  method: string,\r\n  token?: string | null,\r\n) {\r\n\r\n  \r\n  if (!token) {\r\n    token = await sessionStorage.getItem(\"token\")\r\n\r\n    \r\n\r\n    \r\n  }\r\n  let options: {}\r\n  if (!params) {\r\n    options = {\r\n      url: ApiConstants.BASE_URL + path,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + token,\r\n        ...(token && { token: token }),\r\n      },\r\n      method: method,\r\n    }\r\n  } else {\r\n    options = {\r\n      url: ApiConstants.BASE_URL + path,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + token,\r\n        ...(token && { token: token }),\r\n      },\r\n      method: method,\r\n      ...(params && { body: JSON.stringify(params) }),\r\n      data: params,\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n\r\n\r\n  // axios({\r\n  //   method: 'post',\r\n  //   url: 'http://api-patient.familyhospital.vn/api/auth/login',\r\n  //   data: { mobile: '0905249014', password: '441111' },\r\n  // }).then((resp) => {\r\n  //   console.log(resp.data);\r\n  // });\r\n\r\n  return axios(options)\r\n    .then(resp => {\r\n      // console.log('HIIIIIIIIIIIII',resp.data)\r\n      return resp.data\r\n    })\r\n    .then(json => json)\r\n    .catch(error => {\r\n      // console.log(JSON.stringify(error));\r\n      // const toast = Toast.show(JSON.stringify(error), {\r\n      //   duration: 10000,\r\n      //   position: Toast.positions.BOTTOM,\r\n      //   shadow: true,\r\n      //   animation: true,\r\n      //   hideOnPress: true,\r\n      //   delay: 0,\r\n      //   onShow: () => {\r\n      //     // calls on toast\\`s appear animation start\r\n      //   },\r\n      //   onShown: () => {\r\n      //     // calls on toast\\`s appear animation end.\r\n      //   },\r\n      //   onHide: () => {\r\n      //     // calls on toast\\`s hide animation start.\r\n      //   },\r\n      //   onHidden: () => {\r\n      //     // calls on toast\\`s hide animation end.\r\n      //   },\r\n      // });\r\n\r\n      return error\r\n    })\r\n}\r\n","import defaultUser from '../../utils/default-user';\r\nimport Api from './index'\r\nimport ApiConstants from '../ApiConstants'\r\n\r\n\r\n\r\n\r\nexport async function signIn(userName, password) {\r\n  try {\r\n    // Send request\r\n    const dataUser = await Api(ApiConstants.LOGIN, {\r\n            username: userName,\r\n            password: password,\r\n          }, 'post', null)\r\n\r\n    if(dataUser.user){\r\n      return {\r\n        isOk: true,\r\n        data: dataUser\r\n      };      \r\n    }else{\r\n      return {\r\n        isOk: false,\r\n        message: \"Tên đăng nhập hoặc mật khẩu không chính xác!\"\r\n      };\r\n    }\r\n  }\r\n  catch {\r\n    return {\r\n      isOk: false,\r\n      message: \"Tên đăng nhập hoặc mật khẩu không chính xác!\"\r\n    };\r\n  }\r\n}\r\n\r\nexport async function getUser() {\r\n  try {\r\n    // Send request\r\n    const user = JSON.parse(sessionStorage.getItem(\"user\"))\r\n    if(user){\r\n      return {\r\n        isOk: true,\r\n        data: user\r\n      };      \r\n    }else{\r\n      return {\r\n        isOk: false\r\n      };\r\n    }\r\n\r\n  }\r\n  catch {\r\n    return {\r\n      isOk: false\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport async function createAccount(email, password) {\r\n  try {\r\n    // Send request\r\n    console.log(email, password);\r\n\r\n    return {\r\n      isOk: true\r\n    };\r\n  }\r\n  catch {\r\n    return {\r\n      isOk: false,\r\n      message: \"Failed to create account\"\r\n    };\r\n  }\r\n}\r\n\r\nexport async function changePassword(email, recoveryCode) {\r\n  try {\r\n    // Send request\r\n    console.log(email, recoveryCode);\r\n\r\n    return {\r\n      isOk: true\r\n    };\r\n  }\r\n  catch {\r\n    return {\r\n      isOk: false,\r\n      message: \"Fail\"\r\n    }\r\n  }\r\n}\r\n\r\nexport async function resetPassword(email) {\r\n  try {\r\n    // Send request\r\n    console.log(email);\r\n\r\n    return {\r\n      isOk: true\r\n    };\r\n  }\r\n  catch {\r\n    return {\r\n      isOk: false,\r\n      message: \"Fail\"\r\n    };\r\n  }\r\n}\r\n","import Api from './index'\r\nimport ApiConstants from '../ApiConstants'\r\n\r\n\r\nexport const getModule = async() => {\r\n  return Api(ApiConstants.MODULE_NAME, null, 'get', null)\r\n}\r\n\r\n\r\nexport const CRUDThoigianlichhenkhamngay = async(method, data = null) => {\r\n  switch(method){\r\n    case \"GET\":\r\n      return Api(ApiConstants.GET_ALL_THOI_GIAN_LICH_HEN_KHAM_NGAY, null, method, null);\r\n      \r\n\r\n    case \"POST\":\r\n      return Api(ApiConstants.THOI_GIAN_LICH_HEN_KHAM_NGAY_URL, data.values, method, null)\r\n      \r\n\r\n    case \"PATCH\":\r\n      return Api(ApiConstants.THOI_GIAN_LICH_HEN_KHAM_NGAY_URL + '/' + data.key, data.values, method, null)\r\n\r\n    case \"DELETE\":\r\n        return Api(ApiConstants.THOI_GIAN_LICH_HEN_KHAM_NGAY_URL + '/' + data.key, null, method, null)\r\n       \r\n      default: return Api(ApiConstants.THOI_GIAN_LICH_HEN_KHAM_NGAY_URL, data.values, method, null)\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n\r\n","import Api from './index'\r\nimport ApiConstants from '../ApiConstants'\r\n\r\n\r\nexport const CRUDThoigianlichhenkhamgio = async(method, id,  data = null) => {\r\n  switch(method){\r\n    case \"GET\":\r\n      return Api(ApiConstants.GET_ALL_THOI_GIAN_LICH_HEN_KHAM_GIO + id, null, method, null);\r\n      \r\n\r\n    case \"POST\":\r\n      return Api(ApiConstants.THOI_GIAN_LICH_HEN_KHAM_GIO_URL, data.values, method, null)\r\n      \r\n\r\n    case \"PATCH\":\r\n      return Api(ApiConstants.THOI_GIAN_LICH_HEN_KHAM_GIO_URL + '/' + data.key, data.values, method, null)\r\n\r\n    case \"DELETE\":\r\n        return Api(ApiConstants.THOI_GIAN_LICH_HEN_KHAM_GIO_URL + '/' + data.key, null, method, null)\r\n       \r\n      default: return Api(ApiConstants.THOI_GIAN_LICH_HEN_KHAM_GIO_URL , data.values, method, null)\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n\r\n","import { getModule } from 'api';\r\nimport React, { createContext, useCallback, useContext, useEffect, useMemo, useReducer, useState } from 'react';\r\nimport dayjs from 'dayjs'\r\n\r\n\r\n\r\n\r\nfunction ThoigianlichkhamngayProvider(props) {\r\n  const [id, setId] = useState(null)\r\n  const [moduleId, setModuleId] = useState(null)\r\n  const [module, setModule] = useState()\r\n  const [searchDate, setSearchDate] = useState({\r\n    startDate: dayjs().startOf('year'),\r\n    endDate: dayjs().endOf('year')\r\n  })\r\n\r\n  const [selectedRowIndex, setSelectedRowIndex] = useState(-1)\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getData = async() => {\r\n        const module = await getModule();\r\n        if(module){\r\n          setModule(module)\r\n        }\r\n    }\r\n    return getData()\r\n\r\n\r\n\r\n\r\n  },[])\r\n\r\n  const setIdLichkhamngay = useCallback((id) => {\r\n    setId(id)\r\n  }, [])\r\n\r\n\r\n\r\n  // const DSModule = useMemo(() => {\r\n  //   return module\r\n  // }, [])\r\n\r\n  return (\r\n    \r\n    <ThoigianlichkhamngayContext.Provider value={{ id, setIdLichkhamngay, module, searchDate, selectedRowIndex, setSelectedRowIndex, moduleId, setModuleId }} {...props} />\r\n  );\r\n}\r\n\r\nconst  ThoigianlichkhamngayContext = createContext({});\r\nconst useThoigianlichkhamngay = () => useContext(ThoigianlichkhamngayContext);\r\n\r\nexport { ThoigianlichkhamngayProvider, useThoigianlichkhamngay };\r\n\r\n","import { ButtonItem, Form, GroupItem, Item } from 'devextreme-react/form'\r\nimport React from 'react'\r\nimport dayjs from 'dayjs'\r\nimport { useThoigianlichkhamngay } from 'contexts/thoigianlichkhamngay.context'\r\n\r\n\r\nconst buttonOptions = {\r\n  text: \"Tìm kiếm\",\r\n  type: 'success',\r\n  useSubmitBehavior: true\r\n}\r\n\r\n\r\n\r\nexport default function SearchBox() {\r\n  const { searchDate } = useThoigianlichkhamngay();\r\n\r\n\r\n  const dateTime = {\r\n    startDate: searchDate.startDate,\r\n    endDate: searchDate.endDate\r\n  }\r\n\r\n  return (\r\n    \r\n    <Form colCount={3} id=\"form\" formData={dateTime} colspan={2}>\r\n      <GroupItem>\r\n          <Item dataField={\"startDate\"} editorType={\"dxDateBox\"} />                      \r\n      </GroupItem>\r\n      <GroupItem>\r\n          <Item dataField={\"endDate\"} editorType={\"dxDateBox\"}/>\r\n      </GroupItem>\r\n      <GroupItem>\r\n          <ButtonItem buttonOptions={buttonOptions}/>\r\n      </GroupItem>\r\n  </Form>\r\n  )\r\n}\r\n","// import {  } from 'devextreme-react';\r\nimport { CRUDThoigianlichhenkhamgio } from 'api';\r\nimport { Column, CompareRule, DataGrid, Editing, FilterRow, Form, Popup, RequiredRule } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport { formatMessage } from 'devextreme/localization';\r\nimport React, { useRef } from 'react';\r\nimport 'whatwg-fetch';\r\n\r\n\r\nconst format = { type: \"time\", displayFormat: \"HH:mm\",  useMaskBehavior: \"true\", showClearButton: \"true\" }\r\nconst ThoiGianLichHenGio = React.memo(({ id }) => {\r\n\r\n  const dataGrid = useRef()\r\n\r\n  const ordersData = new CustomStore({\r\n    key: 'id',\r\n    load: () => sendRequest(),\r\n\r\n    insert: (values) => sendRequest('POST', {\r\n      values: values\r\n    }),\r\n\r\n    update: (key, values) => sendRequest('PATCH', {\r\n      key,\r\n      values: values \r\n    }),\r\n\r\n    remove: (key) => sendRequest('DELETE', {\r\n      key,\r\n    })\r\n  })\r\n\r\n\r\n\r\n  const sendRequest = async(method = 'GET', data = {}) => {\r\n    if(id){\r\n      if (method === 'GET') {\r\n        return await CRUDThoigianlichhenkhamgio(method, id)\r\n      }\r\n\r\n      if (data) {\r\n        if(method === \"POST\") data.values[\"thoigianlichhenkham_id\"] = id\r\n        return await CRUDThoigianlichhenkhamgio(method, null, data)\r\n\r\n      }      \r\n    }\r\n\r\n  }\r\n\r\n\r\n  const comparisonTarget = (value) => {\r\n      let gridInstant = dataGrid.current.instance;\r\n      let editRowkey = gridInstant.option('editing.editRowKey')\r\n      let index = gridInstant.getRowIndexByKey(editRowkey)\r\n      let data = gridInstant.cellValue(index, value)\r\n      // console.log(data);\r\n      return data\r\n\r\n  }\r\n\r\n\r\n  return (\r\n\r\n\r\n      <div style={{ marginLeft: \"20px\" }}>\r\n\r\n         <React.Fragment>\r\n          <DataGrid\r\n            id=\"grid\"\r\n            showBorders={true}\r\n            allowColumnReordering={true}\r\n            rowAlternationEnabled={true}\r\n            dataSource={ordersData}\r\n            repaintChangesOnly={true}\r\n            height=\"80vh\"\r\n            ref={dataGrid}\r\n      \r\n\r\n   \r\n          >\r\n             \r\n          <Editing\r\n            mode=\"popup\"\r\n            allowAdding={true}\r\n            allowDeleting={true}\r\n            allowUpdating={true}\r\n          >\r\n              <Popup  width={600} height={400} />\r\n              <Form>\r\n              <Item itemType=\"group\" colCount={1} colSpan={2} >\r\n                  <Item dataField=\"start_time\"/>\r\n                  <Item dataField=\"end_time\" />\r\n              </Item>\r\n\r\n                \r\n\r\n              </Form>\r\n          </Editing>            \r\n\r\n          <Column\r\n              dataField=\"start_time\"\r\n              caption=\"Thời gian bắt đầu\"\r\n              dataType=\"datetime\"\r\n              alignment=\"right\"\r\n              gnment=\"right\"\r\n              editorOptions={format}\r\n              format={\"shortTime\"}\r\n              \r\n            >\r\n              <RequiredRule/>\r\n              <CompareRule   comparisonTarget={()=>{return comparisonTarget(\"end_time\")}} comparisonType={\"<\"}  message={\"Ngày bắt đầu không được lớn hơn ngày kết thúc!\"}/>\r\n\r\n          </Column >\r\n\r\n\r\n            \r\n            <Column dataField=\"end_time\" caption=\"Thời gian kết thúc\" dataType=\"datetime\" alignment=\"right\" gnment=\"right\" editorOptions={format} format={\"shortTime\"}>\r\n                <RequiredRule/>\r\n            </Column >\r\n     \r\n            <Column dataField=\"userCreatedBy.nickname\" caption=\"Người tạo\" dataType=\"string\" alignment=\"right\" gnment=\"right\"/>\r\n            <Column dataField=\"userUpdatedBy.nickname\" caption=\"Người sửa\" dataType=\"string\" alignment=\"right\" gnment=\"right\" />\r\n            <Column dataField=\"createdAt\" caption=\"Ngày tạo\" dataType=\"date\" alignment=\"right\" gnment=\"right\" />\r\n            <Column dataField=\"updatedAt\" caption=\"Ngày sửa\" dataType=\"date\" alignment=\"right\" gnment=\"right\" />\r\n\r\n            <FilterRow visible={true} />\r\n          </DataGrid>\r\n        </React.Fragment>       \r\n      </div> \r\n\r\n\r\n\r\n  );\r\n})\r\n\r\nexport default ThoiGianLichHenGio","import { useThoigianlichkhamngay } from \"contexts/thoigianlichkhamngay.context\";\r\nimport ThoiGianLichHenGio from \"./thoigianlichhenkhamgio\";\r\n\r\nexport default function ThoigianlichhenkhamgioHOC() {\r\n  const { id } = useThoigianlichkhamngay();\r\n  return (\r\n    <ThoiGianLichHenGio id={id}/>\r\n\r\n  )\r\n}\r\n","import { CRUDThoigianlichhenkhamngay } from 'api';\r\nimport { Button, SpeedDialAction,  } from 'devextreme-react';\r\nimport { Column, ColumnFixing, DataGrid, Editing, FilterRow, Form, HeaderFilter, Lookup, Popup, Scrolling,Toolbar ,Item as ItemToolbar } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport { CompareRule, RequiredRule } from 'devextreme-react/validator';\r\nimport config from 'devextreme/core/config';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport React, { useRef, useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\nconst formatSearchDate = {   useMaskBehavior: \"true\" }\r\n\r\n\r\nconst Thoigianlichhenkhamngay = React.memo(({ setId, module }) =>  {\r\n\r\n  console.log(\"mmmmmmmmmmmmmmmmmmmmmm\");\r\n  const dataGrid = useRef()\r\n\r\n  const [ordersData, setOrdersData] = useState(new CustomStore({\r\n    key: 'id',\r\n    load: () => sendRequest(),\r\n\r\n    insert: (values) => sendRequest('POST', {\r\n      values: JSON.stringify(values)\r\n    }),\r\n\r\n    update: (key, values) => sendRequest('PATCH', {\r\n      key,\r\n      values: JSON.stringify(values)\r\n    }),\r\n\r\n    remove: (key) => sendRequest('DELETE', {\r\n      key,\r\n    })\r\n  }))\r\n\r\n\r\n  const sendRequest = async(method = 'GET', data = {}) => {\r\n    if (method === 'GET') {\r\n      return await CRUDThoigianlichhenkhamngay(method)\r\n    }\r\n\r\n    if (data) {\r\n      // console.log(data);\r\n      return await CRUDThoigianlichhenkhamngay(method, data)\r\n    }\r\n  }\r\n\r\n  const onFocusedRowChanging = (e) => {\r\n    const rowsCount = e.component.getVisibleRows().length;\r\n    const pageCount = e.component.pageCount();\r\n    const pageIndex = e.component.pageIndex();\r\n    const key = e.event && e.event.key;\r\n\r\n    if (key && e.prevRowIndex === e.newRowIndex) {\r\n      if (e.newRowIndex === rowsCount - 1 && pageIndex < pageCount - 1) {\r\n        e.component.pageIndex(pageIndex + 1).done(() => {\r\n          e.component.option('focusedRowIndex', 0);\r\n        });\r\n      } else if (e.newRowIndex === 0 && pageIndex > 0) {\r\n        e.component.pageIndex(pageIndex - 1).done(() => {\r\n          e.component.option('focusedRowIndex', rowsCount - 1);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const onFocusedRowChanged = (e) => {\r\n\r\n    // setSelectedRowIndex(e.rowIndex)\r\n    if(e && e.row && e.row.key){\r\n      setId(e.row.key)\r\n    } \r\n    \r\n\r\n  }\r\n\r\n\r\n  \r\n  const comparisonTarget = (value) => {\r\n      let gridInstant = dataGrid.current.instance;\r\n      console.log(gridInstant);\r\n      let editRowkey = gridInstant.option('editing.editRowKey')\r\n      let index = gridInstant.getRowIndexByKey(editRowkey)\r\n      let data = gridInstant.cellValue(index, value)\r\n      // console.log(data);\r\n      return data\r\n  \r\n  }\r\n\r\n  // const editRow = () => {\r\n  //   console.log(selectedRowIndex);\r\n  //   dataGrid.current.instance.editRow(selectedRowIndex)\r\n  //   dataGrid.current.instance.deselectAll()\r\n  // }\r\n\r\n\r\n\r\n  return (\r\n    <DataGrid\r\n      id=\"gridContainer\"\r\n      dateSerializationFormat={\"yyyy-MM-ddTHH:mm:ss\"}\r\n\r\n      showBorders={true}\r\n      allowColumnReordering={true}\r\n      rowAlternationEnabled={true}\r\n      dataSource={ordersData}\r\n      repaintChangesOnly={true}\r\n\r\n\r\n      focusedRowEnabled={true}\r\n      // focusedRowKey={1}\r\n      onFocusedRowChanging={onFocusedRowChanging}\r\n      onFocusedRowChanged={onFocusedRowChanged}\r\n  \r\n      height=\"70vh\"\r\n\r\n      allowColumnResizing={true}\r\n      // columnAutoWidth={true}\r\n      ref={dataGrid}\r\n    >\r\n\r\n    <Scrolling mode=\"virtual\" useNative={true}/>\r\n    <FilterRow visible={true}/>\r\n    <ColumnFixing enabled={true} />\r\n    <HeaderFilter visible={true}/>\r\n    <Editing\r\n      mode=\"popup\"\r\n      allowAdding={true}\r\n      allowDeleting={true}\r\n      allowUpdating={true}\r\n    >\r\n      <Popup  width={600} height={400} />\r\n      <Form>\r\n        <Item itemType=\"group\" colCount={1} colSpan={2} >\r\n          <Item dataField=\"start_date\" dataType=\"date\" />\r\n          <Item dataField=\"end_date\" dataType=\"date\"  />\r\n          <Item dataField=\"module_id\"/>        \r\n        </Item>\r\n      </Form>\r\n    </Editing>\r\n\r\n         \r\n\r\n    \r\n  \r\n    <Column dataField=\"module_id\" caption=\"ModuleName\" fixed={true} width={150}>\r\n          <Lookup dataSource={module} valueExpr=\"id\" displayExpr=\"moduleName\"/>\r\n          <RequiredRule/>\r\n    </Column>\r\n    <Column\r\n      dataField=\"start_date\"\r\n      caption=\"Ngày bắt đầu\"\r\n      dataType=\"date\"\r\n      alignment=\"right\"\r\n      gnment=\"right\"\r\n      editorOptions={formatSearchDate}\r\n      fixed={true}\r\n      width={100}\r\n    >\r\n      <RequiredRule/>\r\n      <CompareRule   comparisonTarget={()=>{return comparisonTarget(\"end_date\")}} comparisonType={\"<\"}  message={\"Ngày bắt đầu không được lớn hơn ngày kết thúc!\"}/>\r\n\r\n      </Column >\r\n\r\n\r\n    \r\n    <Column      width={100} fixed={true} dataField=\"end_date\" caption=\"Ngày kết thúc\" dataType=\"date\" alignment=\"right\" gnment=\"right\"  editorOptions={formatSearchDate}>\r\n    <RequiredRule/>\r\n    </Column>\r\n\r\n    <Column width={100} dataField=\"userCreatedBy.nickname\" caption=\"Người tạo\" dataType=\"string\" alignment=\"right\" gnment=\"right\"/>\r\n    <Column width={100} dataField=\"userUpdatedBy.nickname\" caption=\"Người sửa\" dataType=\"string\" alignment=\"right\" gnment=\"right\" />\r\n    <Column width={100} dataField=\"createdAt\" caption=\"Ngày tạo\" dataType=\"date\" alignment=\"right\" gnment=\"right\" />\r\n    <Column width={100} dataField=\"updatedAt\" caption=\"Ngày sửa\" dataType=\"date\" alignment=\"right\" gnment=\"right\" />\r\n\r\n  \r\n    \r\n\r\n{/*  \r\n    <Toolbar  >\r\n        <ItemToolbar location={\"before\"}>\r\n          <Button icon=\"edit\" type=\"danger\"  onClick={editRow}/>\r\n        </ItemToolbar>\r\n    </Toolbar>  */}\r\n\r\n\r\n  </DataGrid>\r\n\r\n\r\n    // <SpeedDialAction></SpeedDialAction>\r\n  )\r\n})\r\n\r\n\r\nexport default Thoigianlichhenkhamngay","import { useThoigianlichkhamngay } from 'contexts/thoigianlichkhamngay.context';\r\nimport Thoigianlichhenkhamngay from './thoigianlichhenkhamngay';\r\n\r\nexport default function ThoigianlichhenkhamngayHOC() {\r\n  const { setIdLichkhamngay, setModuleId, module,  } = useThoigianlichkhamngay();\r\n\r\n  return (\r\n    <>\r\n      {module &&\r\n        <Thoigianlichhenkhamngay \r\n          setId={setIdLichkhamngay}\r\n          module={module}\r\n          setModuleId={setModuleId}\r\n\r\n        \r\n        />\r\n      }    \r\n    </>\r\n\r\n\r\n\r\n  )\r\n}\r\n","// import {  } from 'devextreme-react';\r\nimport { ThoigianlichkhamngayProvider } from 'contexts/thoigianlichkhamngay.context';\r\nimport { DateBox, Form } from 'devextreme-react';\r\nimport { ButtonItem, GroupItem, Item, SimpleItem } from 'devextreme-react/form';\r\nimport { Location } from 'devextreme-react/map';\r\nimport ResponsiveBox, { Col, Item as ItemBox, Row } from 'devextreme-react/responsive-box';\r\nimport 'whatwg-fetch';\r\nimport SearchBox from './searchBox';\r\nimport ThoigianlichhenkhamgioHOC from './thoigianlichhenkhamgioHOC';\r\nimport ThoigianlichhenkhamngayHOC from './thoigianlichhenkhamngayHOC';\r\n\r\n\r\n\r\n\r\nfunction ThoiGianLichHenKhamNgayWrap() {\r\n  return (\r\n\r\n      <ThoigianlichkhamngayProvider>\r\n        <ResponsiveBox>\r\n          <Row/>\r\n          <Row/>\r\n          <Col ratio={1} />\r\n    \r\n          <Col  ratio={1} />      \r\n\r\n          <ItemBox>\r\n              <Location screen=\"xs sm md lg\"  row={0} col={0} />\r\n\r\n              <SearchBox/>\r\n                {/* <DateBox width={\"200\"}></DateBox>                */}\r\n           \r\n\r\n            </ItemBox>     \r\n\r\n          <ItemBox >\r\n            <Location screen=\"xs sm md lg\" row={1} col={0} />\r\n\r\n            <ThoigianlichhenkhamngayHOC/>\r\n\r\n          </ItemBox>\r\n\r\n   \r\n            <ItemBox>\r\n              <Location screen=\"xs sm md lg\" row={1} col={1} />\r\n              <ThoigianlichhenkhamgioHOC/>\r\n            </ItemBox>        \r\n         \r\n\r\n        \r\n        </ResponsiveBox>\r\n\r\n      </ThoigianlichkhamngayProvider>\r\n\r\n   \r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default ThoiGianLichHenKhamNgayWrap;","import axios from 'axios';\r\nimport { Column, DataGrid, Editing, FilterRow, Form, Grouping, Lookup, Popup, Scrolling } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport { useEffect, useState } from 'react';\r\nimport 'whatwg-fetch';\r\nimport './styles.css';\r\n\r\n\r\n\r\n\r\nconst URL = 'http://localhost:7000/vattu';\r\n\r\n\r\nfunction Dmvt2() {\r\n\r\nconsole.log(1111111111111);\r\n  const ordersData = new CustomStore({\r\n    key: 'Ma_vt',\r\n    load: () => sendRequest(`${URL}`),\r\n\r\n    update: (key, values) => sendRequest(`${URL}/${encodeURIComponent(key)}`, 'PATCH', {\r\n      key,\r\n      values: JSON.stringify(values)\r\n    }),\r\n  })\r\n  console.log(ordersData, 'dfsdfsfsd');\r\n  const sendRequest = (url, method = 'GET', data = {}) => {\r\n    console.log(data, 'thanh13123');\r\n\r\n    if (method === 'GET') {\r\n      return fetch(url, {\r\n        method,\r\n        credentials: 'include',\r\n      }).then((result) => result.json().then((json) => {\r\n        if (result.ok) return json;\r\n        throw json.Message;\r\n      }));\r\n    }\r\n\r\n    if (data) {\r\n      console.log(data, \"-------------------\");\r\n      return fetch(url,\r\n        {\r\n          method: method,\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          credentials: 'include',\r\n          body: data.values\r\n        })\r\n        .then(response => {\r\n          console.log(response, 'rrerere');\r\n          return response;\r\n        })\r\n        .then(data => console.log(data));\r\n    }\r\n  }\r\n\r\n  const [boxData, setBoxData] = useState()\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:7000/nhomvattu',\r\n    )\r\n      .then(function (response) {\r\n        // console.log(response.data, '5464568');\r\n        let a = (response.data).filter(item => item.is_bhcc === true)\r\n        // console.log(a);\r\n        setBoxData(a)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <DataGrid\r\n      id=\"gridContainer\"\r\n      showBorders={true}\r\n      allowColumnReordering={true}\r\n      rowAlternationEnabled={true}\r\n      dataSource={ordersData}\r\n      repaintChangesOnly={true}\r\n      wordWrapEnabled={true}\r\n      height=\"85vh\"\r\n    >\r\n      <Scrolling mode=\"virtual\" />\r\n      <FilterRow visible={true} />\r\n\r\n      <Editing\r\n        mode=\"popup\"\r\n        allowUpdating={true}\r\n      >\r\n        <Popup title='Chỉnh Sửa' showTitle={true} width={800} height={400} />\r\n        <Form>\r\n          <Item dataField=\"id_dm_nhomvattu\" />\r\n        </Form>\r\n      </Editing>\r\n\r\n\r\n      <Column\r\n        dataField=\"So_tt\"\r\n        caption=\"So_TT\"\r\n      // dataType=\"number\"\r\n\r\n      />\r\n\r\n      <Column\r\n        dataField=\"Ma_vt\"\r\n        caption=\"Ma_VT\"\r\n      // dataType=\"string\"\r\n\r\n      />\r\n\r\n      <Column dataField=\"Barcode\" />\r\n      <Column dataField=\"Ten_vt\" caption=\"Tên_VT\" dataType=\"string\" />\r\n      <Column dataField=\"Dvt\" caption=\"Đơn vị tính\" dataType=\"string\" />\r\n      <Column dataField=\"id_dm_nhomvattu\" caption=\"Nhóm Vật Tư\" dataType='string' groupIndex={0} >\r\n        <Lookup dataSource={boxData} displayExpr=\"nhom\" valueExpr=\"id\" />\r\n      </Column>\r\n      <Grouping autoExpandAll={false} />\r\n\r\n    </DataGrid>\r\n  );\r\n\r\n}\r\n\r\nexport default Dmvt2;","import { Column, DataGrid, Editing, FilterRow, Form, Paging, Popup } from 'devextreme-react/data-grid';\r\nimport { CheckBox } from 'devextreme-react';\r\nimport { Item } from 'devextreme-react/form';\r\nimport CustomStore from 'devextreme/data/custom_store';\r\nimport React, { useState } from 'react';\r\nimport 'whatwg-fetch';\r\n// import IButton from './checkboxvalue';\r\n\r\n\r\nconst URL = 'http://localhost:7000/nhomvattu';\r\n\r\nfunction Nhomvattu() {\r\n\r\n  const [ordersData, setOrdersData] = useState(new CustomStore({\r\n    key: 'id',\r\n    load: () => sendRequest(`${URL}`),\r\n\r\n    insert: (values) => sendRequest(`${URL}`, 'POST', {\r\n      values: JSON.stringify(values)\r\n    }),\r\n\r\n    update: (key, values) => sendRequest(`${URL}/${encodeURIComponent(key)}`, 'PATCH', {\r\n      key,\r\n      values: JSON.stringify(values)\r\n    }),\r\n\r\n    remove: (key) => sendRequest(`${URL}/${encodeURIComponent(key)}`, 'DELETE', {\r\n      key,\r\n    })\r\n  }))\r\n\r\n  const sendRequest = (url, method = 'GET', data = {}) => {\r\n    if (method === 'GET') {\r\n      return fetch(url, {\r\n        method,\r\n        credentials: 'include',\r\n      }).then((result) => result.json().then((json) => {\r\n        if (result.ok) return json;\r\n        throw json.Message;\r\n      }));\r\n    }\r\n\r\n    if (data) {\r\n      // console.log(data.key.length, \"-------------------\");\r\n      // console.log(data.values,'sfdsfs');\r\n      // console.log( typeof data.values,'79887');\r\n\r\n      return fetch(url,\r\n        {\r\n          method: method,\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          credentials: 'include',\r\n          body: data.values\r\n        })\r\n        .then(response => {\r\n          return response;\r\n        })\r\n        .then(data => {\r\n          return data\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  const cellRenderTrangThai = (data) => {\r\n    return <CheckBox value={data.data.is_bhcc}></CheckBox>\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DataGrid\r\n        id=\"grid\"\r\n        showBorders={true}\r\n        allowColumnReordering={true}\r\n        rowAlternationEnabled={true}\r\n        dataSource={ordersData}\r\n        repaintChangesOnly={true}\r\n      >\r\n        <Editing\r\n          mode=\"popup\"\r\n          allowAdding={true}\r\n          allowDeleting={true}\r\n          allowUpdating={true}\r\n        >\r\n          <Popup  width={600} height={400} />\r\n          <Form>\r\n            <Item itemType=\"group\" colCount={1} colSpan={2} >\r\n              <Item dataField=\"nhom\" />\r\n              <Item dataField=\"is_bhcc\" editorType=\"dxCheckBox\" />\r\n            </Item>\r\n          </Form>\r\n        </Editing>\r\n\r\n\r\n        <Column\r\n          dataField=\"id\"\r\n          caption=\"ID\"\r\n          dataType=\"string\"\r\n          alignment=\"right\"\r\n          gnment=\"right\"\r\n        />\r\n\r\n        <Column\r\n          dataField=\"nhom\"\r\n          caption=\"Nhóm\"\r\n          dataType=\"string\"\r\n          alignment=\"right\"\r\n          gnment=\"right\"\r\n        />\r\n\r\n        <Column dataField=\"is_bhcc\" caption=\"Trạng Thái\" dataType=\"string\" cellRender={cellRenderTrangThai} />\r\n        <Paging\r\n          enabled=\"true\"\r\n          defaultPageSize=\"15\"\r\n        />\r\n        <FilterRow visible={true} />\r\n      </DataGrid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Nhomvattu;","const btnStyle = {\r\n    padding: \"10px 30px\",\r\n    backgroundColor: \"none\",\r\n    border: \"1px solid black\",\r\n    borderRadius: \"5px\",\r\n  };\r\n  \r\n  const ApplyButton = ({ title = \"Lưu\", click }) => (\r\n    <button style={btnStyle} onClick={click}>\r\n      {title}\r\n    </button>\r\n  );\r\n  \r\n  export default ApplyButton;\r\n  ","import React, { useEffect, useState, useContext, useRef } from \"react\";\r\n\r\n// import \"devextreme/dist/css/dx.dark.css\";\r\nimport \"devexpress-richedit/dist/dx.richedit.css\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.material.blue.light.compact.css\";\r\nimport {\r\n  create,\r\n  RichEdit,\r\n  DocumentFormat,\r\n  MailMergeTabCommandId,\r\n  RibbonTabType,\r\n  MailMergeTabItemId,\r\n} from \"devexpress-richedit\";\r\nimport ApplyButton from \"./Button\";\r\nimport documentAsBase64 from \"./data/docs\";\r\nimport { getApi, patchApi } from \"../../callApi\";\r\nimport \"./template-contract.scss\";\r\nimport \"./richtext-editor.scss\";\r\nimport DataSource from \"devextreme/data/data_source\";\r\nimport ArrayStore from \"devextreme/data/array_store\";\r\nimport { ThemContext } from \"./Context\";\r\nvar rich = RichEdit;\r\nexport default function RichEditComponent() {\r\n  const renderCount = useRef(0);\r\n  console.log(renderCount.current++, \"rich text\");\r\n  const [noidungsua, setnoidungsua] = useState(\"\");\r\n  const { hopdong, setName, name, options } = useContext(ThemContext);\r\n  const [employees, setEmployees] = useState([]);\r\n  const dataEmployee = new DataSource({\r\n    store: new ArrayStore({\r\n      data: employees,\r\n    }),\r\n\r\n    // map: function (dataItem) {\r\n    //     return {...dataItem,\r\n\r\n    //       nhanvienbangcaps: dataItem?.nhanvienbangcaps?.map((item) => (\r\n    //        `${item?.loaibangcap?.tenloaibangcap}, `\r\n    //       )),\r\n    //       dmdonvi:dataItem?.dmdonvi?.tendonvi?dataItem?.dmdonvi?.tendonvi:\"\"\r\n    //     };\r\n    // }\r\n  });\r\n  useEffect(() => {\r\n    const richEditEl = document.getElementById(\"richEdit\");\r\n\r\n    try {\r\n      rich = create(richEditEl, options);\r\n      rich.updateRibbon(function (r) {\r\n        const a = r.getTab(RibbonTabType.MailMerge);\r\n        a.removeItem(MailMergeTabItemId.UpdateAllFields);\r\n        a.removeItem(MailMergeTabItemId.UpdateAllFields);\r\n\r\n        for (var enumMember in MailMergeTabItemId) {\r\n          var isValueProperty = parseInt(enumMember, 10) >= 0;\r\n          if (isValueProperty) {\r\n            if (\r\n              MailMergeTabItemId[enumMember] !== \"ShowInsertMergeFieldDialog\"\r\n            ) {\r\n              a.removeItem(enumMember);\r\n            }\r\n\r\n            // console.log(\"enum member: \", MailMergeTabItemId[enumMember]);\r\n          }\r\n        }\r\n      });\r\n\r\n      rich.openDocument(documentAsBase64, \"DocumentName\", DocumentFormat.Rtf);\r\n      rich.saveDocument(DocumentFormat.Rtf);\r\n\r\n      // rich.events.documentLoaded.addHandler(function (s, e) {\r\n      //   s.executeCommand(MailMergeTabCommandId.ToggleViewMergedData, true);\r\n      // });\r\n    } catch (error) {\r\n      console.log(\"Rich ERROR\", error);\r\n    }\r\n\r\n    getApi(\r\n      `users?join=chucvu%7C%7Cid,tenchucvu&join=chucdanh&join=thoihanhopdong&join=dmhopdong&join=dmtrinhdo&join=dmdantoc&join=dmquoctich&join=dmloaitinhluong&join=dmnganhang&join=dmdonvi&join=dmbophan&join=dmphongban&join=dmloaikhoi&join=tinhtranghonnhan&join=chuyenkhoa&join=nhanvienhopdongs&join=nccmnd&join=nccchn&join=phamvichungchihanhnghe&join=phamvihanhnghebosung&join=dienthianhvans&join=nhanvienbangcaps&join=nhanvienbangcaps.loaibangcap&join=nhanvienhopdongs.loaihopdong`\r\n    ).then((data) => {\r\n      setEmployees(data?.data?.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    rich.mailMergeOptions.setDataSource(dataEmployee);\r\n  }, [employees]);\r\n  useEffect(() => {\r\n    try {\r\n      if(hopdong?.noidung){\r\n        rich.openDocument(hopdong?.noidung, \"DocumentName\", DocumentFormat.Rtf);\r\n      }else{\r\n        rich.newDocument()\r\n      }\r\n    \r\n\r\n      rich.events.saving.addHandler(function (s, e) {\r\n        setnoidungsua(e.base64);\r\n        e.handled = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Rich ERROR\", error);\r\n    }\r\n  }, [hopdong]);\r\n\r\n  useEffect(() => {\r\n    const dataChanged = {\r\n      ...hopdong,\r\n      noidung: noidungsua,\r\n      updatedBy: 1,\r\n      updatedAt: new Date().toISOString(),\r\n    };\r\n\r\n    if (hopdong) {\r\n      patchApi(`templatehd/${hopdong?.id}`, dataChanged).then(() => {\r\n        setName(noidungsua);\r\n      });\r\n    }\r\n  }, [noidungsua]);\r\n\r\n  const handleSave = (e) => {\r\n    rich.saveDocument(DocumentFormat.Rtf);\r\n    e.handled = false;\r\n  };\r\n  return (\r\n    <>\r\n      <ApplyButton click={handleSave} />\r\n      <div id=\"richEdit\"></div>\r\n    </>\r\n  );\r\n}\r\n","//docBase\r\nconst documentAsBase64 =\r\n  'e1xydGYxXGRlZmYwe1xmb250dGJse1xmMCBDYWxpYnJpO319e1xjb2xvcnRibCA7XHJlZDB' +\r\n  'cZ3JlZW4wXGJsdWUyNTUgO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NSA7fXtcKlxkZWZjaHAgXGZzMjJ9e1xzdHl' +\r\n  'sZXNoZWV0IHtccWxcZnMyMiBOb3JtYWw7fXtcKlxjczFcZnMyMiBEZWZhdWx0IFBhcmFncmFwaCBGb250O317XCp' +\r\n  'cY3MyXGZzMjJcY2YxIEh5cGVybGluazt9e1wqXHRzM1x0c3Jvd2RcZnMyMlxxbFx0c3ZlcnRhbHRcdHNjZWxsY2J' +\r\n  'wYXQyXHRzY2VsbHBjdDBcY2x0eGxydGIgTm9ybWFsIFRhYmxlO319e1wqXGxpc3RvdmVycmlkZXRhYmxlfXtcaW5' +\r\n  'mb31cbm91aWNvbXBhdFxzcGx5dHduaW5lXGh0bWF1dHNwXGV4cHNocnRuXHNwbHRwZ3BhclxkZWZ0YWI3MjBcc2V' +\r\n  'jdGRcbWFyZ2xzeG4xNDQwXG1hcmdyc3huMTQ0MFxtYXJndHN4bjE0NDBcbWFyZ2JzeG4xNDQwXGhlYWRlcnk3MjB' +\r\n  'cZm9vdGVyeTcyMFxwZ3dzeG4xMjI0MFxwZ2hzeG4xNTg0MFxjb2xzMVxjb2xzeDcyMFxwYXJkXHBsYWluXHFse1x' +\r\n  'mczIyXGNmMFxjczEgRG9jdW1lbnQgdGV4dH1cZnMyMlxjZjBccGFyfQ=='\r\n\r\n//docWithEptyFields\r\n//docWithValue\r\n// const documentAsBase64 ='PHA+N3U4Njc2NzwvcD4='\r\n\r\nexport default documentAsBase64;\r\n","import { createOptions, ViewType, RichEditUnit } from \"devexpress-richedit\";\r\n\r\nconst options = createOptions();\r\n\r\noptions.bookmarks.visibility = true;\r\noptions.bookmarks.color = \"#ff0000\";\r\n\r\noptions.confirmOnLosingChanges.enabled = true;\r\noptions.confirmOnLosingChanges.message =\r\n  \"Are you sure you want to perform the action? All unsaved document data will be lost.\";\r\n\r\noptions.fields.updateFieldsBeforePrint = true;\r\noptions.fields.updateFieldsOnPaste = true;\r\n// options.document.protect = 'www'\r\n\r\noptions.mailMerge.activeRecord = 1;\r\noptions.mailMerge.viewMergedData = false;\r\n// options.mailMerge.dataSource = [\r\n//   { Name: 'Indy', age: 32 },\r\n//   { Name: 'Andy', age: 28 },\r\n//   { Name: 'Indy', age: 32 },\r\n//   { Name: 'Andy', age: 28 },\r\n// ];\r\n// events\r\noptions.events.activeSubDocumentChanged = () => {};\r\noptions.events.autoCorrect = () => {};\r\noptions.events.calculateDocumentVariable = () => {};\r\noptions.events.characterPropertiesChanged = () => {};\r\noptions.events.contentInserted = () => {};\r\noptions.events.contentRemoved = () => {};\r\noptions.events.documentChanged = () => {};\r\noptions.events.documentFormatted = () => {};\r\noptions.events.documentLoaded = () => {};\r\noptions.events.gotFocus = () => {};\r\noptions.events.hyperlinkClick = () => {};\r\noptions.events.keyDown = () => {};\r\noptions.events.keyUp = () => {};\r\noptions.events.paragraphPropertiesChanged = () => {};\r\noptions.events.lostFocus = () => {};\r\noptions.events.pointerDown = () => {};\r\noptions.events.pointerUp = () => {};\r\noptions.events.saving = (e, s) => {\r\n  console.log(\"saving ======>\", e, s);\r\n\r\n\r\n};\r\noptions.events.saved = (e) => {\r\n  console.log(\"Saved\", e);\r\n};\r\noptions.events.selectionChanged = () => {};\r\noptions.events.customCommandExecuted = (s, e) => {\r\n  switch (e.commandName) {\r\n    case \"insertEmailSignature\":\r\n      s.document.insertParagraph(s.document.length);\r\n      s.document.insertText(s.document.length, \"_________\");\r\n      s.document.insertParagraph(s.document.length);\r\n      s.document.insertText(s.document.length, \"Best regards,\");\r\n      s.document.insertParagraph(s.document.length);\r\n      s.document.insertText(s.document.length, \"John Smith\");\r\n      s.document.insertParagraph(s.document.length);\r\n      s.document.insertText(s.document.length, \"mailto:john@example.com\");\r\n      s.document.insertParagraph(s.document.length);\r\n      s.document.insertText(s.document.length, \"+1 (818) 844-0000\");\r\n      break;\r\n    default:\r\n      console.log(\"customCommandExecuted\");\r\n  }\r\n};\r\n\r\noptions.unit = RichEditUnit.Inch;\r\n\r\noptions.view.viewType = ViewType.PrintLayout;\r\noptions.view.simpleViewSettings.paddings = {\r\n  left: 10,\r\n  top: 10,\r\n  right: 10,\r\n  bottom: 10,\r\n};\r\noptions.exportUrl = \"http://localhost:3030/richserver\";\r\n\r\noptions.readOnly = false;\r\noptions.width = \"1000px\";\r\noptions.height = \"1000px\";\r\n\r\nexport default options;\r\n","import DataGrid, {\r\n  Column,\r\n  Editing,\r\n  FilterRow,\r\n  Popup,\r\n  Scrolling,\r\n  Selection,\r\n} from \"devextreme-react/data-grid\";\r\nimport CustomStore from \"devextreme/data/custom_store\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.material.blue.light.compact.css\";\r\nimport React, {\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  useContext,\r\n} from \"react\";\r\nimport RichEditComponent from \"./richtext-editor\";\r\nimport options from \"./data/options\";\r\nimport \"./template-contract.scss\";\r\n\r\nimport {ThemContext} from './Context'\r\nfunction TemplateContract() {\r\n  const [id, setId] = useState(0);\r\n  const [hopdong, sethopdong] = useState(null);\r\n \r\n  const [name, setName] = useState(null);\r\n  function isNotEmpty(value) {\r\n    return value !== undefined && value !== null && value !== \"\";\r\n  }\r\n  function handleErrors(response) {\r\n    if (!response.ok) throw Error(response.statusText);\r\n    return response;\r\n  }\r\n\r\n  const store = useMemo(() => {\r\n    return new CustomStore({\r\n      key: \"id\",\r\n      load(loadOptions) {\r\n        let params = \"?\";\r\n        [\"page\"].forEach((i) => {\r\n          if (i in loadOptions && isNotEmpty(loadOptions[i])) {\r\n            params += `${i}=${JSON.stringify(loadOptions[i])}&`;\r\n          }\r\n        });\r\n        params = params.slice(0, -1);\r\n        return fetch(\"http://localhost:7000/templatehd\")\r\n          .then((response) => response.json())\r\n          .then((data) => ({\r\n            data: data.data,\r\n            count: data.count,\r\n            total: data.total,\r\n            pageCount: data.pageCount,\r\n          }))\r\n          .catch(() => {\r\n            throw new Error(\"Data Loading Error\");\r\n          });\r\n      },\r\n      onInserting: function (values, key) {\r\n        // Your code goes here\r\n      },\r\n      insert: (values) => {\r\n        const data = {\r\n          loaitemplate: values.loaitemplate,\r\n          createdBy: 1,\r\n          createdAt: new Date().toISOString(),\r\n        };\r\n        return fetch(\"http://localhost:7000/templatehd\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }).then(handleErrors);\r\n      },\r\n      update: (key, values) => {\r\n        const data = {\r\n          loaitemplate: values.loaitemplate,\r\n          updatedBy: 1,\r\n          updatedAt: new Date().toISOString(),\r\n        };\r\n        return fetch(\r\n          `http://localhost:7000/templatehd/${encodeURIComponent(key)}`,\r\n          {\r\n            method: \"PATCH\",\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        ).then(handleErrors);\r\n      },\r\n      remove: (key) => {\r\n        return fetch(\r\n          `http://localhost:7000/templatehd/${encodeURIComponent(key)}`,\r\n          {\r\n            method: \"DELETE\",\r\n          }\r\n        ).then(handleErrors);\r\n      },\r\n    });\r\n  }, [name]);\r\n\r\n  const onSelectionChanged = useCallback(({ selectedRowsData }) => {\r\n    const data = selectedRowsData[0];\r\n    sethopdong(data);\r\n  }, []);\r\n\r\n  const values = {\r\n    hopdong,\r\n    store,\r\n    onSelectionChanged,\r\n    name,\r\n    setName,\r\n    id,\r\n    setId,options\r\n  };\r\n  return (\r\n    <ThemContext.Provider value={values}>\r\n      <div className=\"main\">\r\n        <Grid />\r\n        <div className=\"richeditor\">\r\n          <RichEditComponent  />\r\n        </div>\r\n      </div>\r\n    </ThemContext.Provider>\r\n  );\r\n}\r\n\r\nconst Grid = () => {\r\n  const { store, onSelectionChanged, name } = useContext(ThemContext);\r\n  const renderCount = useRef(0);\r\n  console.log(renderCount.current++, \"grid\");\r\n  return (\r\n    <DataGrid\r\n      className={`dgr-contract ${renderCount.current.toString()}}`}\r\n      dataSource={store}\r\n      columnWidth={160}\r\n      width=\"400\"\r\n      height=\"400\"\r\n      showBorders={true}\r\n      allowColumnReordering={true}\r\n      focusedRowEnabled={true}\r\n      keyExpr=\"id\"\r\n      onSelectionChanged={onSelectionChanged}\r\n    >\r\n      <Editing\r\n        mode=\"popup\"\r\n        allowUpdating={true}\r\n        allowAdding={true}\r\n        allowDeleting={true}\r\n      >\r\n        <Popup\r\n          title=\"Hợp đồng\"\r\n          showTitle={true}\r\n          width={700}\r\n          height={525}\r\n        />\r\n      </Editing>\r\n      <Column\r\n        dataField=\"loaitemplate\"\r\n        dataType=\"string\"\r\n        caption=\"Loại hợp đồng\"\r\n      />\r\n      <Selection mode=\"single\" />\r\n\r\n      <Scrolling\r\n        rowRenderingMode=\"virtual\"\r\n        mode=\"virtual\"\r\n        columnRenderingMode=\"virtual\"\r\n      />\r\n      <FilterRow visible={true} />\r\n    </DataGrid>\r\n  );\r\n};\r\n\r\nexport default TemplateContract;\r\n\r\n\r\n\r\n\r\n","import { withNavigationWatcher } from './contexts/navigation';\r\nimport { bacsigiadinh } from 'pages/bacsigd/bacsigiadinh';\r\nimport { HomePage, TasksPage, ProfilePage,BenhAnComponent, XenghiemLabo, NewStaffPage, ThoiGianLichHenKhamNgayWrap,Dmvt2, Nhomvattu ,  TemplateContractPage,\r\n  ContractPage } from 'pages/index';\r\nconst routes = [\r\n  {\r\n    path: '/bacsigiadinh',\r\n    component: bacsigiadinh,\r\n    name: 'Cấu hình thời gian cho phép đặt lịch',\r\n    children: [\r\n      {\r\n        path: '/bacsigiadinh',\r\n        component: bacsigiadinh,\r\n        name: 'Cấu hình thời gian cho phép đặt lịch',\r\n        meta: { title: 'bacsigiadinh', icon: 'tab' }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/tasks',\r\n    component: TasksPage,\r\n    name: 'Tasks',\r\n    children: [\r\n      {\r\n        path: '/tasks',\r\n        component: TasksPage,\r\n        name: 'Tasks',\r\n        meta: { title: 'tasks', icon: 'tab' }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/profile',\r\n    component: ProfilePage,\r\n    name: 'Profile',\r\n    children: [\r\n      {\r\n        path: '/profile',\r\n        component: ProfilePage,\r\n        name: 'Profile',\r\n        meta: { title: 'profile', icon: 'tab' }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/new-staff',\r\n    component: NewStaffPage,\r\n    name: 'New Staff',\r\n    children: [\r\n      {\r\n        path: '/new-staff',\r\n        component: NewStaffPage,\r\n        name: 'New Staff',\r\n        meta: { title: 'new-staff', icon: 'tab' }\r\n      }\r\n    ]\r\n  },  \r\n  {\r\n    path: '/home',\r\n    path: \"/new-staff/:id\",\r\n    component: ContractPage,\r\n    name: \"Nhân viên\",\r\n    children: [\r\n      {\r\n        path: \"/new-staff/:id\",\r\n        component: ContractPage,\r\n        name: \"Nhân viên\",\r\n        meta: {\r\n          icon: \"tab\",\r\n          text: \"hopdong\",\r\n          path: \"/new-staff/:id\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/template-contract\",\r\n    component: TemplateContractPage,\r\n    name: \" Mẫu hợp đồng\",\r\n    children: [\r\n      {\r\n        path: \"/template-contract\",\r\n        component: TemplateContractPage,\r\n        name: \"Mẫu hợp đồng\",\r\n        meta: { title: \"template-contract\", icon: \"tab\" },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: '/home',\r\n    component: HomePage,\r\n    name: 'Home',\r\n    children: [\r\n      {\r\n        path: '/home',\r\n        component: HomePage,\r\n        name: 'Home',\r\n        meta: { title: 'home', icon: 'tab' }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/benhan/:benhanId',\r\n    component: BenhAnComponent,\r\n    name: 'BenhAn',\r\n    children: [\r\n      {\r\n        path: '/benhan/:benhanId',\r\n        component: BenhAnComponent,\r\n        name: 'BenhAn',\r\n        meta: {  icon: 'tab', text:'BenhAn', path : '/benhan/:benhanId'  }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/thuthuatranghammat/:benhanId',\r\n    component: BenhAnComponent,\r\n    name: 'thuthatranghammat',\r\n    children: [\r\n      {\r\n        path: '/thuthuatranghammat/:benhanId',\r\n        component: BenhAnComponent,\r\n        name: 'thuthatranghammat',\r\n        meta: {  icon: 'tab', text:'thuthatranghammat', path : '/thuthuatranghammat/:benhanId'  }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/xetnghiem/:benhanId',\r\n    component: XenghiemLabo,\r\n    name: 'xetnghiem',\r\n    children: [\r\n      {\r\n        path: '/xetnghiem/:benhanId',\r\n        component: XenghiemLabo,\r\n        name: 'xetnghiem',\r\n        meta: {  icon: 'tab', text:'xetnghiem', path : '/xetnghiem/:benhanId'  }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/xquang/:benhanId',\r\n    component: BenhAnComponent,\r\n    name: 'xquang',\r\n    children: [\r\n      {\r\n        path: '/benhan/:benhanId/xquang/:benhanId',\r\n        component: BenhAnComponent,\r\n        name: 'xquang',\r\n        meta: {  icon: 'tab', text:'xquang', path : '/xquang/:benhanId'  }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/datlichhen',\r\n    component: ThoiGianLichHenKhamNgayWrap,\r\n    name: 'datlichhen',\r\n    children: [\r\n      {\r\n        path: '/datlichhen',\r\n        component: ThoiGianLichHenKhamNgayWrap,\r\n        name: 'xquang',\r\n        meta: { title: 'datlichhen', icon: 'tab' }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/danhmuc-vattu',\r\n    component: Dmvt2,\r\n    name: 'danhmucvattu',\r\n    children: [\r\n      {\r\n        path: '/danhmuc-vattu',\r\n        component: Dmvt2,\r\n        name: 'danhmucvattu',\r\n        meta: { title: 'danhmucvattu', icon: 'tab' }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '/nhom-vattu',\r\n    component: Nhomvattu,\r\n    name: 'nhomvattu',\r\n    children: [\r\n      {\r\n        path: '/nhom-vattu',\r\n        component: Nhomvattu,\r\n        name: 'nhomvattu',\r\n        meta: { title: 'nhomvattu', icon: 'tab' }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes.map(route => {\r\n  return {\r\n    ...route,\r\n    component: withNavigationWatcher(route.component)\r\n  };\r\n});\r\n","import React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\r\nimport { getUser, signIn as sendSignInRequest } from '../api';\r\n\r\nfunction AuthProvider(props) {\r\n  const [user, setUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const result = await getUser();\r\n      if (result.isOk) {\r\n        setUser(result.data);\r\n      }\r\n      setLoading(false);\r\n    })();\r\n  }, []);\r\n\r\n  const signIn = useCallback(async (userName, password) => {\r\n    const result = await sendSignInRequest(userName, password);\r\n    if (result.isOk) {\r\n      sessionStorage.setItem(\"user\", JSON.stringify(result.data.user))\r\n      sessionStorage.setItem(\"token\", result.data.token.accessToken)\r\n\r\n      setUser(result.data.user);\r\n    }\r\n    return result;\r\n  }, []);\r\n\r\n  const signOut = useCallback(() => {\r\n    sessionStorage.removeItem('user')\r\n    setUser();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, signIn, signOut, loading }} {...props} />\r\n  );\r\n}\r\n\r\nconst AuthContext = createContext({});\r\nconst useAuth = () => useContext(AuthContext);\r\n\r\nexport { AuthProvider, useAuth };\r\n\r\n","import React, { useMemo } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ContextMenu, { Position } from 'devextreme-react/context-menu';\r\nimport List from 'devextreme-react/list';\r\nimport { useAuth } from '../../contexts/auth';\r\nimport './user-panel.scss';\r\n\r\nexport default function UserPanel({ menuMode }) {\r\n  const { user, signOut } = useAuth();\r\n  const history = useHistory();\r\n\r\n  function navigateToProfile() {\r\n    history.push(\"/profile\");\r\n  }\r\n  const menuItems = useMemo(() => ([\r\n    {\r\n      text: 'Profile',\r\n      icon: 'user',\r\n      onClick: navigateToProfile\r\n    },\r\n    {\r\n      text: 'Logout',\r\n      icon: 'runner',\r\n      onClick: signOut\r\n    }\r\n  ]), [signOut]);\r\n\r\n  return (\r\n    <div className={'user-panel'}>\r\n      <div className={'user-info'}>\r\n        <div className={'image-container'}>\r\n          <div\r\n            style={{\r\n              background: `url(${user.avatarUrl}) no-repeat #fff`,\r\n              backgroundSize: 'cover'\r\n            }}\r\n            className={'user-image'} />\r\n        </div>\r\n        <div className={'user-name'}>{user.holotNhanVien} {user.tennhanvien}</div>\r\n      </div>\r\n\r\n      {menuMode === 'context' && (\r\n        <ContextMenu\r\n          items={menuItems}\r\n          target={'.user-button'}\r\n          showEvent={'dxclick'}\r\n          width={210}\r\n          cssClass={'user-menu'}\r\n        >\r\n          <Position my={'top center'} at={'bottom center'} />\r\n        </ContextMenu>\r\n      )}\r\n      {menuMode === 'list' && (\r\n        <List className={'dx-toolbar-menu-action'} items={menuItems} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import Button from 'devextreme-react/button';\r\nimport { Template } from 'devextreme-react/core/template';\r\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\r\nimport React from 'react';\r\nimport UserPanel from '../user-panel/user-panel';\r\nimport './header.scss';\r\nexport default function Header({ menuToggleEnabled, title, toggleMenu }) {\r\n  return (\r\n    <header className={'header-component'}>\r\n      <Toolbar className={'header-toolbar'}>\r\n        <Item\r\n          visible={menuToggleEnabled}\r\n          location={'before'}\r\n          widget={'dxButton'}\r\n          cssClass={'menu-button'}\r\n        >\r\n          <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\r\n        </Item>\r\n        <Item\r\n          location={'before'}\r\n          cssClass={'header-title'}\r\n          text={title}\r\n          visible={!!title}\r\n        />\r\n        <Item\r\n          location={'after'}\r\n          locateInMenu={'auto'}\r\n          menuItemTemplate={'userPanelTemplate'}\r\n        >\r\n          <Button\r\n            className={'user-button authorization'}\r\n            width={210}\r\n            height={'100%'}\r\n            stylingMode={'text'}\r\n          >\r\n            <UserPanel menuMode={'context'} />\r\n          </Button>\r\n        </Item>\r\n        <Template name={'userPanelTemplate'}>\r\n          <UserPanel menuMode={'list'} />\r\n        </Template>\r\n      </Toolbar>\r\n    </header>\r\n)}\r\n","import React from 'react';\r\nimport './footer.scss';\r\n\r\nexport default function Footer({ ...rest }) {\r\n  return <footer className={'footer'} {...rest} />;\r\n}\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Form, {\r\n  Item,\r\n  Label,\r\n  ButtonItem,\r\n  ButtonOptions,\r\n  RequiredRule,\r\n  EmailRule\r\n} from 'devextreme-react/form';\r\nimport LoadIndicator from 'devextreme-react/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { useAuth } from '../../contexts/auth';\r\n\r\nimport './login-form.scss';\r\n\r\nexport default function LoginForm() {\r\n\r\n\r\n\r\n  const history = useHistory();\r\n  const { signIn } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const formData = useRef({});\r\n\r\n  const onSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    const { userName, password } = formData.current;\r\n\r\n    const result = await signIn(userName, password);\r\n    if (!result.isOk) {\r\n      setLoading(false);\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }, [signIn]);\r\n\r\n\r\n\r\n  return (\r\n    <form className={'login-form'} onSubmit={onSubmit}>\r\n      <Form formData={formData.current} disabled={loading}>\r\n        <Item\r\n          dataField={'userName'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={emailEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Email is required\" />\r\n          {/* <EmailRule message=\"Email is invalid\" /> */}\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'password'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={passwordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        {/* <Item\r\n          dataField={'rememberMe'}\r\n          editorType={'dxCheckBox'}\r\n          editorOptions={rememberMeEditorOptions}\r\n        >\r\n          <Label visible={false} />\r\n        </Item> */}\r\n        <ButtonItem>\r\n          <ButtonOptions\r\n            width={'100%'}\r\n            type={'default'}\r\n            useSubmitBehavior={true}\r\n          >\r\n            <span className=\"dx-button-text\">\r\n              {\r\n                loading\r\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\r\n                  : 'Đăng nhập'\r\n              }\r\n            </span>\r\n          </ButtonOptions>\r\n        </ButtonItem>\r\n        {/* <Item>\r\n          <div className={'link'}>\r\n            <Link to={'/reset-password'}>Forgot password?</Link>\r\n          </div>\r\n        </Item> */}\r\n        {/* <ButtonItem>\r\n          <ButtonOptions\r\n            text={'Create an account'}\r\n            width={'100%'}\r\n            onClick={onCreateAccountClick}\r\n          />\r\n        </ButtonItem> */}\r\n      </Form>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Tên đăng nhập', mode: 'username' };\r\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Mật khẩu', mode: 'password' };\r\n// const rememberMeEditorOptions = { text: 'Remember me', elementAttr: { class: 'form-text' } };\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Form, {\r\n  Item,\r\n  Label,\r\n  ButtonItem,\r\n  ButtonOptions,\r\n  RequiredRule,\r\n  EmailRule\r\n} from 'devextreme-react/form';\r\nimport LoadIndicator from 'devextreme-react/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { resetPassword } from '../../api/methods/auth';\r\nimport './reset-password-form.scss';\r\n\r\nconst notificationText = 'We\\'ve sent a link to reset your password. Check your inbox.';\r\n\r\nexport default function ResetPasswordForm(props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const formData = useRef({});\r\n\r\n  const onSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    const { email } = formData.current;\r\n    setLoading(true);\r\n\r\n    const result = await resetPassword(email);\r\n    setLoading(false);\r\n\r\n    if (result.isOk) {\r\n      history.push('/login');\r\n      notify(notificationText, 'success', 2500);\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <form className={'reset-password-form'} onSubmit={onSubmit}>\r\n      <Form formData={formData.current} disabled={loading}>\r\n        <Item\r\n          dataField={'email'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={emailEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Email is required\" />\r\n          <EmailRule message=\"Email is invalid\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <ButtonItem>\r\n          <ButtonOptions\r\n            elementAttr={submitButtonAttributes}\r\n            width={'100%'}\r\n            type={'default'}\r\n            useSubmitBehavior={true}\r\n          >\r\n            <span className=\"dx-button-text\">\r\n              {\r\n                loading\r\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\r\n                  : 'Reset my password'\r\n              }\r\n            </span>\r\n          </ButtonOptions>\r\n        </ButtonItem>\r\n        <Item>\r\n          <div className={'login-link'}>\r\n            Return to <Link to={'/login'}>Sign In</Link>\r\n          </div>\r\n        </Item>\r\n      </Form>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\r\nconst submitButtonAttributes = { class: 'submit-button' };\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Form, {\r\n  Item,\r\n  Label,\r\n  ButtonItem,\r\n  ButtonOptions,\r\n  RequiredRule,\r\n  CustomRule,\r\n  EmailRule\r\n} from 'devextreme-react/form';\r\nimport notify from 'devextreme/ui/notify';\r\nimport LoadIndicator from 'devextreme-react/load-indicator';\r\nimport { createAccount } from '../../api/methods/auth';\r\nimport './create-account-form.scss';\r\n\r\nexport default function CreateAccountForm(props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const formData = useRef({});\r\n\r\n  const onSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formData.current;\r\n    setLoading(true);\r\n\r\n    const result = await createAccount(email, password);\r\n    setLoading(false);\r\n\r\n    if (result.isOk) {\r\n      history.push('/login');\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }, [history]);\r\n\r\n  const confirmPassword = useCallback(\r\n    ({ value }) => value === formData.current.password,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <form className={'create-account-form'} onSubmit={onSubmit}>\r\n      <Form formData={formData.current} disabled={loading}>\r\n        <Item\r\n          dataField={'email'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={emailEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Email is required\" />\r\n          <EmailRule message=\"Email is invalid\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'password'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={passwordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'confirmedPassword'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={confirmedPasswordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <CustomRule\r\n            message={'Passwords do not match'}\r\n            validationCallback={confirmPassword}\r\n          />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item>\r\n          <div className='policy-info'>\r\n            By creating an account, you agree to the <Link to=\"#\">Terms of Service</Link> and <Link to=\"#\">Privacy Policy</Link>\r\n          </div>\r\n        </Item>\r\n        <ButtonItem>\r\n          <ButtonOptions\r\n            width={'100%'}\r\n            type={'default'}\r\n            useSubmitBehavior={true}\r\n          >\r\n            <span className=\"dx-button-text\">\r\n              {\r\n                loading\r\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\r\n                  : 'Create a new account'\r\n              }\r\n            </span>\r\n          </ButtonOptions>\r\n        </ButtonItem>\r\n        <Item>\r\n          <div className={'login-link'}>\r\n            Have an account? <Link to={'/login'}>Sign In</Link>\r\n          </div>\r\n        </Item>\r\n      </Form>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\r\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\r\nconst confirmedPasswordEditorOptions = { stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' };\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Form, {\r\n  Item,\r\n  Label,\r\n  ButtonItem,\r\n  ButtonOptions,\r\n  RequiredRule,\r\n  CustomRule,\r\n} from 'devextreme-react/form';\r\nimport LoadIndicator from 'devextreme-react/load-indicator';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { changePassword } from '../../api/methods/auth';\r\n\r\nexport default function ChangePasswordForm(props) {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const formData = useRef({});\r\n  const { recoveryCode } = useParams();\r\n\r\n  const onSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    const { password } = formData.current;\r\n    setLoading(true);\r\n\r\n    const result = await changePassword(password, recoveryCode);\r\n    setLoading(false);\r\n\r\n    if (result.isOk) {\r\n      history.push('/login');\r\n    } else {\r\n      notify(result.message, 'error', 2000);\r\n    }\r\n  }, [history, recoveryCode]);\r\n\r\n  const confirmPassword = useCallback(\r\n    ({ value }) => value === formData.current.password,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Form formData={formData.current} disabled={loading}>\r\n        <Item\r\n          dataField={'password'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={passwordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <Item\r\n          dataField={'confirmedPassword'}\r\n          editorType={'dxTextBox'}\r\n          editorOptions={confirmedPasswordEditorOptions}\r\n        >\r\n          <RequiredRule message=\"Password is required\" />\r\n          <CustomRule\r\n            message={'Passwords do not match'}\r\n            validationCallback={confirmPassword}\r\n          />\r\n          <Label visible={false} />\r\n        </Item>\r\n        <ButtonItem>\r\n          <ButtonOptions\r\n            width={'100%'}\r\n            type={'default'}\r\n            useSubmitBehavior={true}\r\n          >\r\n            <span className=\"dx-button-text\">\r\n              {\r\n                loading\r\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\r\n                  : 'Continue'\r\n              }\r\n            </span>\r\n          </ButtonOptions>\r\n        </ButtonItem>\r\n      </Form>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\r\nconst confirmedPasswordEditorOptions = { stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' };\r\n","import { HomePage } from 'pages/index';\r\n\r\nexport const navigation = [\r\n  {\r\n    text: 'Home',\r\n    path: '/home',\r\n    icon: 'home',\r\n    children: [\r\n      {\r\n        component: HomePage,\r\n        meta: { text: 'Home', icon: 'home', path: '/home' }\r\n      }\r\n    ]\r\n  },\r\n\r\n    {\r\n      text: 'Danh mục',\r\n      icon: 'folder',\r\n      items: [\r\n\r\n    {\r\n      text: 'Mẫu hợp đồng',\r\n      path: '/template-contract',\r\n      children: [\r\n        {\r\n          // component: TasksPage,\r\n          meta: { text: 'Mẫu hợp đồng', icon: 'folder', path: '/template-contract'}\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      text: 'New staff',\r\n      path: '/new-staff',\r\n      children: [\r\n        {\r\n          // component: TasksPage,\r\n          meta: { text: ' New Staff', icon: 'folder', path: '/new-staff' }\r\n        }\r\n      ]\r\n    }\r\n  ]},\r\n\r\n  {\r\n    text: 'Căn tin',\r\n    icon: 'folder',\r\n    items: [\r\n      {\r\n        text: 'Danh Mục Vật Tư',\r\n        path: '/danhmuc-vattu',\r\n        children: [\r\n          {\r\n            // component: TasksPage,\r\n            meta: { text: 'Danh Mục Vật Tư', icon: 'folder', path: '/danhmuc-vattu' }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        text: 'Nhóm Vật Tư',\r\n        path: '/nhom-vattu',\r\n        children: [\r\n          {\r\n            // component: TasksPage,\r\n            meta: { text: 'Nhóm Vật Tư', icon: 'folder', path: '/nhom-vattu' }\r\n          }\r\n        ]\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    text: 'Bác sĩ Gia Đình',\r\n    icon: 'folder',\r\n    items: [\r\n      {\r\n        text: 'Cấu hình thời gian cho phép đặt lịch',\r\n        path: '/bacsigiadinh',\r\n        children: [\r\n          {\r\n            // component: ProfilePage,\r\n            meta: { text: 'Cấu hình thời gian cho phép đặt lịch', icon: 'folder', path: '/bacsigiadinh' }\r\n          }\r\n        ]\r\n      },\r\n      // {\r\n      //   text: 'Tasks',\r\n      //   path: '/tasks',\r\n      //   children: [\r\n      //     {\r\n      //       // component: TasksPage,\r\n      //       meta: { text: 'Tasks', icon: 'folder', path: '/tasks' }\r\n      //     }\r\n      //   ]\r\n      // },\r\n     \r\n      {\r\n        text: 'Đặt lịch hẹn',\r\n        path: '/datlichhen',\r\n        children: [\r\n          {\r\n            // component: TasksPage,\r\n            meta: { text: 'Đặt lịch hẹn', icon: 'folder', path: '/datlichhen' }\r\n          }\r\n        ]\r\n      },\r\n    ]\r\n  }\r\n  // {\r\n  //   text: 'Bác sĩ Gia Đình',\r\n  //   path: '/bacsigiadinh',\r\n  //   icon: 'home',\r\n  //   children: [\r\n  //     {\r\n  //       component: Bacsigiadinh,\r\n  //       meta: { text: 'Bác sĩ Gia Đình', icon: 'home', path: '/bacsigiadinh' }\r\n  //     }\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   text: 'Examples',\r\n  //   icon: 'folder',\r\n  //   items: [\r\n  //     {\r\n  //       text: 'Profile',\r\n  //       path: '/profile',\r\n  //       children: [\r\n  //         {\r\n  //           // component: ProfilePage,\r\n  //           meta: { text: 'Profile', icon: 'folder', path: '/profile' }\r\n  //         }\r\n  //       ]\r\n  //     },\r\n  //     {\r\n  //       text: 'Tasks',\r\n  //       path: '/tasks',\r\n  //       children: [\r\n  //         {\r\n  //           // component: TasksPage,\r\n  //           meta: { text: 'Tasks', icon: 'folder', path: '/tasks' }\r\n  //         }\r\n  //       ]\r\n  //     },\r\n  //     {\r\n  //       text: 'New staff',\r\n  //       path: '/new-staff',\r\n  //       children: [\r\n  //         {\r\n  //           // component: TasksPage,\r\n  //           meta: { text: ' New Staff', icon: 'folder', path: '/new-staff' }\r\n  //         }\r\n  //       ]\r\n  //     }\r\n  //   ]\r\n  // }\r\n];\r\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nexport const useScreenSize = () => {\r\n  const [screenSize, setScreenSize] = useState(getScreenSize());\r\n  const onSizeChanged = useCallback(() => {\r\n    setScreenSize(getScreenSize());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    subscribe(onSizeChanged);\r\n\r\n    return () => {\r\n      unsubscribe(onSizeChanged);\r\n    };\r\n  }, [onSizeChanged]);\r\n\r\n  return screenSize;\r\n};\r\n\r\nexport const useScreenSizeClass = () => {\r\n  const screenSize = useScreenSize();\r\n\r\n  if (screenSize.isLarge) {\r\n    return 'screen-large';\r\n  }\r\n\r\n  if (screenSize.isMedium) {\r\n    return 'screen-medium';\r\n  }\r\n\r\n  if (screenSize.isSmall) {\r\n    return 'screen-small';\r\n  }\r\n\r\n  return 'screen-x-small';\r\n}\r\n\r\nlet handlers = [];\r\nconst xSmallMedia = window.matchMedia('(max-width: 599.99px)');\r\nconst smallMedia = window.matchMedia('(min-width: 600px) and (max-width: 959.99px)');\r\nconst mediumMedia = window.matchMedia('(min-width: 960px) and (max-width: 1279.99px)');\r\nconst largeMedia = window.matchMedia('(min-width: 1280px)');\r\n\r\n[xSmallMedia, smallMedia, mediumMedia, largeMedia].forEach(media => {\r\n  media.addListener((e) => {\r\n    e.matches && handlers.forEach(handler => handler());\r\n  });\r\n});\r\n\r\nconst subscribe = handler => handlers.push(handler);\r\n\r\nconst unsubscribe = handler => {\r\n  handlers = handlers.filter(item => item !== handler);\r\n};\r\n\r\nfunction getScreenSize() {\r\n  return {\r\n    isXSmall: xSmallMedia.matches,\r\n    isSmall: smallMedia.matches,\r\n    isMedium: mediumMedia.matches,\r\n    isLarge: largeMedia.matches\r\n  };\r\n}\r\n","import TreeView from 'devextreme-react/tree-view';\r\nimport * as events from 'devextreme/events';\r\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport { navigation } from '../../app-navigation';\r\nimport { useNavigation } from '../../contexts/navigation';\r\nimport { useScreenSize } from '../../utils/media-query';\r\nimport './side-navigation-menu.scss';\r\n\r\n\r\nexport default function SideNavigationMenu(props) {\r\n  const {\r\n    children,\r\n    selectedItemChanged,\r\n    openMenu,\r\n    compactMode,\r\n    onMenuReady\r\n  } = props;\r\n\r\n  const { isLarge } = useScreenSize();\r\n  function normalizePath () {\r\n    return navigation.map((item) => {\r\n      if(item.path && !(/^\\//.test(item.path))){\r\n        item.path = `/${item.path}`;\r\n      }\r\n      return {...item, expanded: isLarge};\r\n    });\r\n  }\r\n  const items = useMemo(\r\n    normalizePath,\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  const { navigationData: { currentPath } } = useNavigation();\r\n\r\n  const treeViewRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const getWrapperRef = useCallback((element) => {\r\n    const prevElement = wrapperRef.current;\r\n    if (prevElement) {\r\n      events.off(prevElement, 'dxclick');\r\n    }\r\n\r\n    wrapperRef.current = element;\r\n    events.on(element, 'dxclick', e => {\r\n      openMenu(e);\r\n    });\r\n  }, [openMenu]);\r\n\r\n  useEffect(() => {\r\n    const treeView = treeViewRef.current && treeViewRef.current.instance;\r\n    if (!treeView) {\r\n      return;\r\n    }\r\n\r\n    if (currentPath !== undefined) {\r\n      treeView.selectItem(currentPath);\r\n      treeView.expandItem(currentPath);\r\n    }\r\n\r\n    if (compactMode) {\r\n      treeView.collapseAll();\r\n    }\r\n  }, [currentPath, compactMode]);\r\n\r\n  return (\r\n    <div\r\n      className={'dx-swatch-additional side-navigation-menu'}\r\n      ref={getWrapperRef}\r\n    >\r\n      {children}\r\n      <div className={'menu-container'}>\r\n        <TreeView\r\n          searchEnabled={!compactMode}\r\n          searchMode=\"contains\"\r\n          ref={treeViewRef}\r\n          items={items}\r\n          keyExpr={'path'}\r\n          selectionMode={'single'}\r\n          focusStateEnabled={false}\r\n          expandEvent={'click'}\r\n          onItemClick={selectedItemChanged}\r\n          onContentReady={onMenuReady}\r\n          width={'100%'}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\nimport { useScreenSize } from './media-query';\r\n\r\nexport function useMenuPatch() {\r\n  const { isSmall, isMedium } = useScreenSize();\r\n  const [enabled, setEnabled] = useState(isSmall || isMedium);\r\n  const onMenuReady = useCallback(() => {\r\n    if (!enabled) {\r\n      return;\r\n    }\r\n\r\n    setTimeout(() => setEnabled(false));\r\n  }, [enabled]);\r\n\r\n  return [enabled ? 'pre-init-blink-fix' : '', onMenuReady];\r\n}\r\n","import { Template } from 'devextreme-react/core/template';\r\nimport Drawer from 'devextreme-react/drawer';\r\nimport ScrollView from 'devextreme-react/scroll-view';\r\nimport React, { useCallback, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Footer, Header, SideNavigationMenu } from '../../components';\r\nimport { useScreenSize } from '../../utils/media-query';\r\nimport { useMenuPatch } from '../../utils/patches';\r\nimport './side-nav-outer-toolbar.scss';\r\n\r\nexport default function SideNavOuterToolbar({ title, children }) {\r\n  const scrollViewRef = useRef();\r\n  const history = useHistory();\r\n  const { isXSmall, isLarge } = useScreenSize();\r\n  const [patchCssClass, onMenuReady] = useMenuPatch();\r\n  const [menuStatus, setMenuStatus] = useState(\r\n    isLarge ? MenuStatus.Opened : MenuStatus.Closed\r\n  );\r\n\r\n  const toggleMenu = useCallback(({ event }) => {\r\n    setMenuStatus(\r\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\r\n        ? MenuStatus.Opened\r\n        : MenuStatus.Closed\r\n    );\r\n    event.stopPropagation();\r\n  }, []);\r\n\r\n  const temporaryOpenMenu = useCallback(() => {\r\n    setMenuStatus(\r\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\r\n        ? MenuStatus.TemporaryOpened\r\n        : prevMenuStatus\r\n    );\r\n  }, []);\r\n\r\n  const onOutsideClick = useCallback(() => {\r\n    setMenuStatus(\r\n      prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge\r\n        ? MenuStatus.Closed\r\n        : prevMenuStatus\r\n    );\r\n  }, [isLarge]);\r\n\r\n  const onNavigationChanged = useCallback(({ itemData: { path }, event, node }) => {\r\n     \r\n    if (menuStatus === MenuStatus.Closed || !path || node.selected) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    history.push(path);\r\n    scrollViewRef.current.instance.scrollTo(0);\r\n\r\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\r\n      setMenuStatus(MenuStatus.Closed);\r\n      event.stopPropagation();\r\n    }\r\n  }, [history, menuStatus, isLarge]);\r\n\r\n  return (\r\n    <div className={'side-nav-outer-toolbar'}>\r\n      <Header\r\n        className={'layout-header'}\r\n        menuToggleEnabled\r\n        toggleMenu={toggleMenu}\r\n        title={title}\r\n      />\r\n      <Drawer\r\n        className={['drawer', patchCssClass].join(' ')}\r\n        position={'before'}\r\n        closeOnOutsideClick={onOutsideClick}\r\n        openedStateMode={isLarge ? 'shrink' : 'overlap'}\r\n        revealMode={isXSmall ? 'slide' : 'expand'}\r\n        minSize={isXSmall ? 0 : 60}\r\n        maxSize={250}\r\n        shading={isLarge ? false : true}\r\n        opened={menuStatus === MenuStatus.Closed ? false : true}\r\n        template={'menu'}\r\n      >\r\n        <div className={'container'}>\r\n          <ScrollView ref={scrollViewRef} className={'layout-body with-footer'}>\r\n            <div className={'content'}>\r\n              {React.Children.map(children, item => {\r\n                return item.type !== Footer && item;\r\n              })}\r\n            </div>\r\n            <div className={'content-block'}>\r\n              {React.Children.map(children, item => {\r\n                return item.type === Footer && item;\r\n              })}\r\n            </div>\r\n          </ScrollView>\r\n        </div>\r\n        <Template name={'menu'}>\r\n          <SideNavigationMenu\r\n            compactMode={menuStatus === MenuStatus.Closed}\r\n            selectedItemChanged={onNavigationChanged}\r\n            openMenu={temporaryOpenMenu}\r\n            onMenuReady={onMenuReady}\r\n          >\r\n          </SideNavigationMenu> \r\n        </Template> \r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MenuStatus = {\r\n  Closed: 1,\r\n  Opened: 2,\r\n  TemporaryOpened: 3\r\n};\r\n","import { Sortable } from 'devextreme-react/sortable';\r\nimport TabPanel from 'devextreme-react/tab-panel';\r\nimport 'devextreme/data/odata/store';\r\nimport { HomePage, ProfilePage, TasksPage } from 'pages';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { onTabDrop, removeMenuRouter } from 'store/module/tagViews';\r\nimport './header.scss';\r\n\r\nexport const fetchUser = (dis, state) => async (dispatch, getState) => {\r\n  return dis(onTabDrop(state));\r\n}\r\n\r\nfunction HeaderTwo() {\r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  let isArrayHtml = [];\r\n  const list = useSelector((state) => state.tagViews);\r\n  const [selectedItem, setSelectedItem] = React.useState({});\r\n  for (const [key, value] of Object.entries(list)) {\r\n    isArrayHtml.push(list[key][0].meta);\r\n  }\r\n  const closeButtonHandler = React.useCallback((item) => {\r\n    const index = isArrayHtml.indexOf(item);\r\n    dispatch(removeMenuRouter(item));\r\n    if (index <= isArrayHtml.length && index > 0) {\r\n      const getPositionIndex = isArrayHtml[index - 1];\r\n      history.push(getPositionIndex?.path);\r\n      setSelectedItem(getPositionIndex);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    isArrayHtml.map(index => {\r\n      if (index?.path === pathname) {\r\n        setSelectedItem(index);\r\n      }\r\n    })\r\n  }, [pathname, isArrayHtml])\r\n\r\n  const closeHandler = React.useCallback((data) => {\r\n    return () => closeButtonHandler(data);\r\n  });\r\n\r\n  const renderTitle = React.useCallback((data) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <span>\r\n            {data?.text}\r\n          </span>\r\n          {isArrayHtml.length >= 1 && <i className=\"dx-icon dx-icon-close\" onClick={closeHandler(data)} />}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n\r\n  // const onTabsSelectionChanged = (args)  => {\r\n  //    history.push(args?.removedItems[0]?.path);\r\n  // }\r\n\r\n  const onSelectionChanged = React.useCallback((args) => {\r\n    setSelectedItem(args?.addedItems[0]);\r\n    history.push(args?.addedItems[0].path);\r\n  });\r\n\r\n  const onTabDragStart = React.useCallback((e) => {\r\n    e.itemData = e.fromData[e.fromIndex];\r\n  });\r\n\r\n  const onTabDrop = React.useCallback((e) => {\r\n    isArrayHtml.splice(e.fromIndex, 1);\r\n    isArrayHtml.splice(e.toIndex, 0, e.itemData);\r\n    const result = fetchUser(dispatch, isArrayHtml);\r\n    result();\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Sortable\r\n        filter=\".dx-tab\"\r\n        data={isArrayHtml}\r\n        itemOrientation=\"horizontal\"\r\n        dragDirection=\"horizontal\"\r\n        onDragStart={onTabDragStart}\r\n        onReorder={onTabDrop}\r\n      >\r\n        <TabPanel\r\n          dataSource={isArrayHtml}\r\n          height={\"100%\"}\r\n          itemTitleRender={renderTitle}\r\n          deferRendering={false}\r\n          showNavButtons={true}\r\n          selectedItem={selectedItem}\r\n          repaintChangesOnly={true}\r\n          onSelectionChanged={onSelectionChanged}\r\n          itemComponent={() => { return <> </> }}\r\n        />\r\n        {/* <Tabs\r\n            dataSource={isArrayHtml}\r\n            selectedIndex={selectedItem}\r\n            // onOptionChanged={onTabsSelectionChanged}\r\n            deferRendering={false}\r\n            showNavButtons={true}\r\n            onSelectionChanged={onTabsSelectionChanged}\r\n          /> */}\r\n      </Sortable>\r\n      {/* <Tasks /> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default HeaderTwo;\r\n","import { ScrollView } from 'devextreme-react';\r\nimport Button from 'devextreme-react/button';\r\nimport { Template } from 'devextreme-react/core/template';\r\nimport Drawer from 'devextreme-react/drawer';\r\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\r\nimport React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { addMenuRouter } from 'store/module/tagViews';\r\nimport { Footer, Header, SideNavigationMenu } from '../../components';\r\nimport HeaderTwo from '../../components/headertwo/header';\r\nimport { useScreenSize } from '../../utils/media-query';\r\nimport { useMenuPatch } from '../../utils/patches';\r\nimport './side-nav-inner-toolbar.scss';\r\nexport default function SideNavInnerToolbar({ title, children }) {\r\n  const dispatch = useDispatch();\r\n  const scrollViewRef = useRef();\r\n  const history = useHistory();\r\n  const { isXSmall, isLarge } = useScreenSize();\r\n  const [patchCssClass, onMenuReady] = useMenuPatch();\r\n  const [menuStatus, setMenuStatus] = useState(\r\n    isLarge ? MenuStatus.Opened : MenuStatus.Closed\r\n  );\r\n\r\n  const toggleMenu = useCallback(({ event }) => {\r\n    setMenuStatus(\r\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\r\n        ? MenuStatus.Opened\r\n        : MenuStatus.Closed\r\n    );\r\n    event.stopPropagation();\r\n  }, []);\r\n\r\n  const temporaryOpenMenu = useCallback(() => {\r\n    setMenuStatus(\r\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\r\n        ? MenuStatus.TemporaryOpened\r\n        : prevMenuStatus\r\n    );\r\n  }, []);\r\n\r\n  const onOutsideClick = useCallback(() => {\r\n    setMenuStatus(\r\n      prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge\r\n        ? MenuStatus.Closed\r\n        : prevMenuStatus\r\n    );\r\n  }, [isLarge]);\r\n\r\n  const onNavigationChanged = useCallback(({ itemData: { path }, event, node, itemData: {children} }) => {\r\n    if (menuStatus === MenuStatus.Closed || !path || node.selected) {\r\n       event.preventDefault();\r\n      return;\r\n    }\r\n    history.push(path);\r\n    const action = addMenuRouter(children);\r\n    dispatch(action);\r\n    // scrollViewRef.current.instance.scrollTo(0);\r\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\r\n       setMenuStatus(MenuStatus.Closed);\r\n       event.stopPropagation();\r\n    }\r\n  }, [history, menuStatus, isLarge]);\r\n  return (\r\n    <div className={'side-nav-inner-toolbar'}>\r\n      <Drawer\r\n        className={['drawer', patchCssClass].join(' ')}\r\n        position={'before'}\r\n        closeOnOutsideClick={onOutsideClick}\r\n        openedStateMode={isLarge ? 'shrink' : 'overlap'}\r\n        revealMode={isXSmall ? 'slide' : 'expand'}\r\n        minSize={isXSmall ? 0 : 60}\r\n        maxSize={250}\r\n        shading={isLarge ? false : true}\r\n        opened={menuStatus === MenuStatus.Closed ? false : true}\r\n        template={'menu'}\r\n      >\r\n        <div className={'container'}>\r\n            <Header\r\n              menuToggleEnabled={isXSmall}\r\n              toggleMenu={toggleMenu}\r\n            />\r\n          <HeaderTwo\r\n            menuToggleEnabled={isXSmall}\r\n            toggleMenu={toggleMenu}\r\n          />\r\n          <ScrollView ref={scrollViewRef} className={'layout-body with-footer'}>\r\n            <div className={'content'}>\r\n              {React.Children.map(children, item => {\r\n                return item.type !== Footer && item;\r\n              })}\r\n            </div>\r\n            <div className={'content-block'}>\r\n              {React.Children.map(children, item => {\r\n                return item.type === Footer && item;\r\n              })}\r\n            </div>\r\n          </ScrollView>\r\n        </div>\r\n        <Template name={'menu'}>\r\n          <SideNavigationMenu\r\n            compactMode={menuStatus === MenuStatus.Closed}\r\n            selectedItemChanged={onNavigationChanged}\r\n            openMenu={temporaryOpenMenu}\r\n            onMenuReady={onMenuReady}\r\n          >\r\n            <Toolbar id={'navigation-header'}>\r\n              {\r\n                !isXSmall &&\r\n                <Item\r\n                  location={'before'}\r\n                  cssClass={'menu-button'}\r\n                >\r\n                  <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\r\n                </Item>\r\n              }\r\n              <Item location={'before'} cssClass={'header-title'} text={title} />\r\n            </Toolbar>\r\n          </SideNavigationMenu>\r\n        </Template>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MenuStatus = {\r\n  Closed: 1,\r\n  Opened: 2,\r\n  TemporaryOpened: 3\r\n};\r\n","import React from 'react';\r\nimport ScrollView from 'devextreme-react/scroll-view';\r\nimport './single-card.scss';\r\n\r\nexport default function SingleCard({ title, description, children }) {\r\n  return (\r\n    <ScrollView height={'100%'} width={'100%'} className={'with-footer single-card'}>\r\n      <div className={'dx-card content'}>\r\n        <div className={'header'}>\r\n          <div className={'title'}>{title}</div>\r\n          <div className={'description'}>{description}</div>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </ScrollView>\r\n)}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport appInfo from './app-info';\r\nimport routes from './app-routes';\r\nimport { SideNavInnerToolbar as SideNavBarLayout } from './layouts';\r\nimport { Footer } from './components';\r\nexport default function Content() {\r\n  return (\r\n\r\n    <SideNavBarLayout title={appInfo.title}>\r\n      <Switch>\r\n        {routes.map(({ path, component }) => (\r\n          <Route\r\n            exact\r\n            key={path}\r\n            path={path}\r\n            component={component}\r\n          />\r\n        ))}\r\n        <Redirect to={'home'} />\r\n      </Switch>\r\n    </SideNavBarLayout>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { SingleCard } from './layouts';\r\nimport { LoginForm, ResetPasswordForm, ChangePasswordForm, CreateAccountForm } from './components';\r\n\r\nexport default function UnauthenticatedContent() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/login' >\r\n        <SingleCard title=\"Sign In\">\r\n          <LoginForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Route exact path='/create-account' >\r\n        <SingleCard title=\"Sign Up\">\r\n          <CreateAccountForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Route exact path='/reset-password' >\r\n        <SingleCard\r\n          title=\"Reset Password\"\r\n          description=\"Please enter the email address that you used to register, and we will send you a link to reset your password via Email.\"\r\n        >\r\n          <ResetPasswordForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Route exact path='/change-password/:recoveryCode' >\r\n        <SingleCard title=\"Change Password\">\r\n          <ChangePasswordForm />\r\n        </SingleCard>\r\n      </Route>\r\n      <Redirect to={'/login'} />\r\n    </Switch>\r\n  );\r\n}\r\n","import LoadPanel from 'devextreme-react/load-panel';\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport React, { useEffect } from 'react';\r\nimport { AliveScope } from 'react-activation';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport Content from './Content';\r\nimport { AuthProvider, useAuth } from './contexts/auth';\r\nimport { NavigationProvider } from './contexts/navigation';\r\nimport './dx-styles.scss';\r\nimport './themes/generated/theme.additional.css';\r\nimport './themes/generated/theme.base.css';\r\nimport UnauthenticatedContent from './UnauthenticatedContent';\r\nimport { useScreenSizeClass } from './utils/media-query';\r\n\r\nimport viMessages from \"devextreme/localization/messages/vi.json\";\r\n\r\nimport { locale, loadMessages, formatMessage } from \"devextreme/localization\";\r\nimport dxDateBox from 'devextreme/ui/date_box';\r\nimport dataGrid from 'devextreme/ui/data_grid';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  locale(\"vi\");\r\n  loadMessages(viMessages);\r\n\r\n  useEffect(() => {\r\n    dataGrid.defaultOptions({\r\n      dateSerializationFormat: \"yyyy-MM-ddTHH:mm:ss\",\r\n        options: {\r\n          dateSerializationFormat: \"yyyy-MM-ddTHH:mm:ss\"\r\n        }\r\n      })\r\n  }, [])\r\n\r\n\r\n\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <LoadPanel visible={true} />;\r\n  }\r\n\r\n  if (user) {\r\n    return <Content />;\r\n  }\r\n\r\n\r\n\r\n\r\n  return <UnauthenticatedContent />;\r\n}\r\n\r\nexport default function Root() {\r\n  const screenSizeClass = useScreenSizeClass();\r\n\r\n  return (\r\n    <AliveScope>\r\n    <Router>\r\n      <AuthProvider>\r\n        <NavigationProvider>\r\n          <div className={`app ${screenSizeClass}`}>\r\n            <App />\r\n          </div>\r\n        </NavigationProvider>\r\n      </AuthProvider>\r\n    </Router>\r\n    </AliveScope>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store/store';\r\nimport App from './App';\r\n// import './index.css';\r\nimport './polyfills';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={persistor} /> */}\r\n        <App />\r\n    </Provider>,  \r\n  document.getElementById('root')\r\n);\r\n // <React.StrictMode>s\r\n {/* </React.StrictMode>, */}\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}